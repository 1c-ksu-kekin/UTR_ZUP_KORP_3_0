#Область ОбработчикиСобытийФормы

//ЮТР начало изменения 
//{32 565}, 25.05.2015
//При подборе штатной позиции в штатном расписании разделяются визуально безвременные вакантные позиции и временно свободные позиции

&НаСервереБезКонтекста
//Функция возвращает массив временно вакантных позиций штатного расписания
Функция ЮТР_НайтиВременноВакантныеПозиции()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗанятыеПозицииШтатногоРасписания.ПозицияШтатногоРасписания,
	|	ЗанятыеПозицииШтатногоРасписания.КоличествоСтавок * ВЫБОР
	|		КОГДА ЗанятыеПозицииШтатногоРасписания.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА 1
	|		КОГДА ЗанятыеПозицииШтатногоРасписания.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА -1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоСтавок
	|ПОМЕСТИТЬ ВТ_УсловныеДвижения
	|ИЗ
	|	РегистрНакопления.ЗанятыеПозицииШтатногоРасписания КАК ЗанятыеПозицииШтатногоРасписания
	|ГДЕ
	|	ЗанятыеПозицииШтатногоРасписания.УсловноеДвижение = ИСТИНА
	|	И ЗанятыеПозицииШтатногоРасписания.ДатаОтменыУсловногоДвижения <= &ДатаАктуальности
	|	И ЗанятыеПозицииШтатногоРасписания.Период >= &ДатаАктуальности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_УсловныеДвижения.ПозицияШтатногоРасписания,
	|	СУММА(ВТ_УсловныеДвижения.КоличествоСтавок) КАК КоличествоСтавок
	|ПОМЕСТИТЬ ВТ_УсловныеДвиженияСвернуто
	|ИЗ
	|	ВТ_УсловныеДвижения КАК ВТ_УсловныеДвижения
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_УсловныеДвижения.ПозицияШтатногоРасписания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_УсловныеДвиженияСвернуто.ПозицияШтатногоРасписания
	|ИЗ
	|	ВТ_УсловныеДвиженияСвернуто КАК ВТ_УсловныеДвиженияСвернуто
	|ГДЕ
	|	ВТ_УсловныеДвиженияСвернуто.КоличествоСтавок > 0";
	
	ТекДата = ОбщегоНазначения.РабочаяДатаПользователя();
	ТекДата = ?(ЗначениеЗаполнено(ТекДата), ТекДата,ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ДатаАктуальности", ТекДата);
	
	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ПозицияШтатногоРасписания");
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
//Функция возвращает массив всех вакантных позиций штатного расписания
Функция ЮТР_НайтиВакантныеПозиции()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗанятыеПозицииШтатногоРасписания.ПозицияШтатногоРасписания,
	|	ВЫБОР
	|		КОГДА ЗанятыеПозицииШтатногоРасписания.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ЗанятыеПозицииШтатногоРасписания.КоличествоСтавок
	|		ИНАЧЕ -ЗанятыеПозицииШтатногоРасписания.КоличествоСтавок
	|	КОНЕЦ КАК КоличествоСтавок
	|ПОМЕСТИТЬ ВТ_ДвиженияПозицийШР
	|ИЗ
	|	РегистрНакопления.ЗанятыеПозицииШтатногоРасписания КАК ЗанятыеПозицииШтатногоРасписания
	|ГДЕ
	|	ЗанятыеПозицииШтатногоРасписания.Период <= &ДатаАктуальности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДвиженияПозицийШР.ПозицияШтатногоРасписания,
	|	СУММА(ВТ_ДвиженияПозицийШР.КоличествоСтавок) КАК КоличествоСтавок
	|ПОМЕСТИТЬ ВТ_ЗанятыеПозицииШР
	|ИЗ
	|	ВТ_ДвиженияПозицийШР КАК ВТ_ДвиженияПозицийШР
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДвиженияПозицийШР.ПозицияШтатногоРасписания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗанятыеПозицииШтатногоРасписания.ПозицияШтатногоРасписания,
	|	ЗанятыеПозицииШтатногоРасписания.КоличествоСтавок * ВЫБОР
	|		КОГДА ЗанятыеПозицииШтатногоРасписания.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА 1
	|		КОГДА ЗанятыеПозицииШтатногоРасписания.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА -1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоСтавок
	|ПОМЕСТИТЬ ВТ_УсловныеДвижения
	|ИЗ
	|	РегистрНакопления.ЗанятыеПозицииШтатногоРасписания КАК ЗанятыеПозицииШтатногоРасписания
	|ГДЕ
	|	ЗанятыеПозицииШтатногоРасписания.УсловноеДвижение = ИСТИНА
	|	И ЗанятыеПозицииШтатногоРасписания.ДатаОтменыУсловногоДвижения <= &ДатаАктуальности
	|	И ЗанятыеПозицииШтатногоРасписания.Период >= &ДатаАктуальности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_УсловныеДвижения.ПозицияШтатногоРасписания,
	|	СУММА(ВТ_УсловныеДвижения.КоличествоСтавок) КАК КоличествоСтавок
	|ПОМЕСТИТЬ ВТ_УсловныеДвиженияСвернуто
	|ИЗ
	|	ВТ_УсловныеДвижения КАК ВТ_УсловныеДвижения
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_УсловныеДвижения.ПозицияШтатногоРасписания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_УсловныеДвиженияСвернуто.ПозицияШтатногоРасписания
	|ПОМЕСТИТЬ ВТ_ВременноСвободныеПозиции
	|ИЗ
	|	ВТ_УсловныеДвиженияСвернуто КАК ВТ_УсловныеДвиженияСвернуто
	|ГДЕ
	|	ВТ_УсловныеДвиженияСвернуто.КоличествоСтавок > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ШтатноеРасписание.Ссылка КАК ПозицияШтатногоРасписания
	|ПОМЕСТИТЬ ВТ_ВсеСвободныеПозиции
	|ИЗ
	|	Справочник.ШтатноеРасписание КАК ШтатноеРасписание
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗанятыеПозицииШР КАК ВТ_ЗанятыеПозицииШР
	|		ПО ШтатноеРасписание.Ссылка = ВТ_ЗанятыеПозицииШР.ПозицияШтатногоРасписания
	|ГДЕ
	|	ШтатноеРасписание.Утверждена = ИСТИНА
	|	И ШтатноеРасписание.Закрыта = ЛОЖЬ
	|	И ШтатноеРасписание.КоличествоСтавок - ЕСТЬNULL(ВТ_ЗанятыеПозицииШР.КоличествоСтавок, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВсеСвободныеПозиции.ПозицияШтатногоРасписания
	|ИЗ
	|	ВТ_ВсеСвободныеПозиции КАК ВТ_ВсеСвободныеПозиции
	|ГДЕ
	|	НЕ ВТ_ВсеСвободныеПозиции.ПозицияШтатногоРасписания В
	|				(ВЫБРАТЬ
	|					ВТ_ВременноСвободныеПозиции.ПозицияШтатногоРасписания
	|				ИЗ
	|					ВТ_ВременноСвободныеПозиции)";
	
	ТекДата = ОбщегоНазначения.РабочаяДатаПользователя();
	ТекДата = ?(ЗначениеЗаполнено(ТекДата), ТекДата,ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ДатаАктуальности", ТекДата);
	
	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ПозицияШтатногоРасписания");
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
//СписокШтатныхПозиций выделяется ЦветомТекста
Процедура ЮТР_РаскраситьШтатныеПозиции(СписокШтатныхПозиций, ЦветТекста)
	
	// Добавим условное оформление.
	ЭлементУсловногоОформления = Список.УсловноеОформление.Элементы.Добавить();
	
	// Создадим условие оформления.
	ГруппаЭлементовОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаЭлементовОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИЛИ;
	
	ЭлементОтбора = ГруппаЭлементовОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлементОтбора.ПравоеЗначение = СписокШтатныхПозиций;
	
	// Укажем цвет.
	ЭлементОформления = ЭлементУсловногоОформления.Оформление.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ЦветТекста"));
	ЭлементОформления.Использование = Истина;
	ЭлементОформления.Значение = ЦветТекста;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//При открытии формы списка раскравим вакантные позиции в зеленый цвет, временно вакантные - в синий.
&НаКлиенте
Процедура ЮТР_ПриОткрытии(Отказ)
	
	СписокВакантныхПозиций = ЮТР_НайтиВакантныеПозиции();
	СписокВременноВакантныхПозиций = ЮТР_НайтиВременноВакантныеПозиции();
	ЗеленыйЦветТекста = Новый Цвет(0, 140, 0);
	СинийЦветТекста = Новый Цвет(0, 0, 240);
	ЮТР_РаскраситьШтатныеПозиции(СписокВакантныхПозиций, ЗеленыйЦветТекста);
	ЮТР_РаскраситьШтатныеПозиции(СписокВременноВакантныхПозиций, СинийЦветТекста);
	
КонецПроцедуры

//ЮТР окончание изменения

#КонецОбласти

