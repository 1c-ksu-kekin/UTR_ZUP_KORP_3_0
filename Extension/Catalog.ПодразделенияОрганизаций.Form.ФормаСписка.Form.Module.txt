#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ЮТР_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание") Тогда
		
		Если Параметры.Свойство("ПоказыватьРасформированныеПодразделения") Тогда
			ПоказыватьРасформированныеПодразделения = Параметры.ПоказыватьРасформированныеПодразделения;
		КонецЕсли;
		
		Если Параметры.Свойство("ПоказыватьНовыеПодразделения") Тогда
			ПоказыватьНовыеПодразделения = Параметры.ПоказыватьНовыеПодразделения;
		КонецЕсли;
		
		ИспользоватьУсловноеОформление = Истина;
		
	Иначе
		
		ИспользоватьУсловноеОформление = Ложь;
		
		ПоказыватьРасформированныеПодразделения = Истина;
		ПоказыватьНовыеПодразделения = Истина;
		
	КонецЕсли; 
	
	Для каждого ЭлементУсловногоОформления Из Список.УсловноеОформление.Элементы Цикл
		ЭлементУсловногоОформления.Использование = ИспользоватьУсловноеОформление;
	КонецЦикла;
	
	Если Параметры.РежимВыбора Тогда
		
		Элементы.Список.РежимВыбора = Истина;
		
		Если ЗначениеЗаполнено(Параметры.ТекущаяСтрока) Тогда
			
			ПоказыватьРасформированныеПодразделения = Параметры.ТекущаяСтрока.Расформировано;
			Если НЕ Параметры.ТекущаяСтрока.Сформировано Тогда
				ПоказыватьНовыеПодразделения = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
		Если Параметры.Отбор.Свойство("Владелец")
			И ЗначениеЗаполнено(Параметры.Отбор.Владелец) Тогда
			
			АвтоЗаголовок = Ложь;
			Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Подразделения %1'"),
			Параметры.Отбор.Владелец);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ЮТР_УстановитьОтборСписка(Список.Отбор, ПоказыватьНовыеПодразделения, ПоказыватьРасформированныеПодразделения);
	
	//ЮТР начало изменения 
	//{32 519}, 21.05.2015
	//В ИсключаемыеИменаОтборов добавлен отбор Ссылка
	ЗарплатаКадры.ПриСозданииНаСервереФормыСДинамическимСписком(ЭтотОбъект, "Список",,,, "Сформировано, Расформировано, Ссылка");
	//ЮТР окончание изменения
	
	УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
КонецПроцедуры

//ЮТР начало изменения 
//{32 519}, 05.05.2015
//Добавлены вспомогательные процедуры и функции:

&НаСервереБезКонтекста
//Функция возвращает массив расформированных подразделений, в которых числятся сотрудники
Функция ЮТР_НайтиРасформированныеПодразделенияССотрудниками()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|             ЗанятыеПозицииШтатногоРасписанияОстатки.ПозицияШтатногоРасписания.Подразделение КАК Ссылка
	|ИЗ
	|             РегистрНакопления.ЗанятыеПозицииШтатногоРасписания.Остатки(&ДатаТек, ) КАК ЗанятыеПозицииШтатногоРасписанияОстатки
	|ГДЕ
	|                ЗанятыеПозицииШтатногоРасписанияОстатки.ПозицияШтатногоРасписания.Подразделение.Расформировано = ИСТИНА";
	
	ТекДата = ОбщегоНазначения.РабочаяДатаПользователя();
	ТекДата = ?(ЗначениеЗаполнено(ТекДата), ТекДата,ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ДатаТек", ТекДата);
	
	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
//Функция возвращает массив всех нерасформированных подразделений и расформированных, в которых числятся сотрудники
Функция ЮТР_СписокАктуальныхПодразделенийСИсключениями()
	
	МассивПодразделенийИсключений = ЮТР_НайтиРасформированныеПодразделенияССотрудниками();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|              ПодразделенияОрганизаций.Ссылка
	|ИЗ
	|              Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|ГДЕ
	|              ПодразделенияОрганизаций.Расформировано = ЛОЖЬ";
	
	МассивАктуальныхПодразделений = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	СтруктураПодразделений = Новый Структура("Исключения, Актуальные");
	СтруктураПодразделений.Вставить("Исключения",МассивПодразделенийИсключений);
	СтруктураПодразделений.Вставить("Актуальные",МассивАктуальныхПодразделений);
	Результат = ЮТР_ОбщегоНазначения.ОбъединитьМассивы(СтруктураПодразделений, );
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
//СписокПодразделений выделяется цветом (серые буквы)
Процедура ЮТР_РаскраситьПодразделения(СписокПодразделений)
	
	// Добавим условное оформление.
	ЭлементУсловногоОформления = Список.УсловноеОформление.Элементы.Добавить();
	
	// Создадим условие оформления.
	ГруппаЭлементовОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаЭлементовОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИЛИ;
	
	ЭлементОтбора = ГруппаЭлементовОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлементОтбора.ПравоеЗначение = СписокПодразделений;
	
	// Укажем цвет.
	ЭлементОформления = ЭлементУсловногоОформления.Оформление.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ЦветТекста"));
	ЭлементОформления.Использование = Истина;
	ЭлементОформления.Значение = Новый Цвет(192, 192, 192);
	
КонецПроцедуры

//ЮТР окончание изменения

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЮТР_ПоказыватьНовыеПодразделенияПриИзменении(Элемент)
	
	ЮТР_УстановитьОтборСписка(Список.Отбор, ПоказыватьНовыеПодразделения, ПоказыватьРасформированныеПодразделения);
	
	УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
КонецПроцедуры


&НаКлиенте
Процедура ЮТР_ПоказыватьРасформированныеПодразделенияПриИзменении(Элемент)
	
	ЮТР_УстановитьОтборСписка(Список.Отбор, ПоказыватьНовыеПодразделения, ПоказыватьРасформированныеПодразделения);
	
	//ЮТР начало изменения 
	//{32 519}, 20.05.2015
	//Расформированные подразделения, в которых числятся сотрудники, красим в серый цвет
	СписокПодразделенийИсключений = ЮТР_НайтиРасформированныеПодразделенияССотрудниками();
	ЮТР_РаскраситьПодразделения(СписокПодразделенийИсключений);
	//ЮТР окончание изменения
	
	УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ЮТР_УстановитьОтборСписка(ГруппаОтбора, ПоказыватьНовыеПодразделения, ПоказыватьРасформированныеПодразделения)
	
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(ГруппаОтбора, "Сформировано");
	//ЮТР начало изменения 
	//{32 519}, 05.05.2015
	//Показываем в списке  расформированные подразделения, в которых числятся сотрудники, вне зависимости от установленного флага «Показывать расформированные»
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(ГруппаОтбора,"Ссылка");
	//ЮТР окончание изменения
	
	Если НЕ ПоказыватьНовыеПодразделения Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "Сформировано", Истина);
	КонецЕсли;
	
	Если НЕ ПоказыватьРасформированныеПодразделения Тогда
		//ЮТР начало изменения 
		//{32 519}, 05.05.2015
		//Показываем в списке  расформированные подразделения, в которых числятся сотрудники, вне зависимости от установленного флага «Показывать расформированные»
		СписокПодразделений = ЮТР_СписокАктуальныхПодразделенийСИсключениями();
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "Ссылка",СписокПодразделений , ВидСравненияКомпоновкиДанных.ВСписке); 
		//ЮТР окончание изменения
	КонецЕсли;
	
КонецПроцедуры         

//ЮТР начало изменения 
//{32 519}, 20.05.2015
//При открытии формы расформированные подразделения, в которых числятся сотрудники, красим в серый цвет
&НаКлиенте
Процедура ЮТР_ПриОткрытии(Отказ)
	
	СписокПодразделенийИсключений = ЮТР_НайтиРасформированныеПодразделенияССотрудниками();
	ЮТР_РаскраситьПодразделения(СписокПодразделенийИсключений);
	
КонецПроцедуры
//ЮТР окончание изменения

#КонецОбласти
