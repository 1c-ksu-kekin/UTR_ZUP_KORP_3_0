
&НаСервере
Процедура ЮТР_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьВыполнениеПослеОбработчиковСобытия("ЮТР_ПриСозданииНаСервереПосле", Неопределено);
	УстановитьВыполнениеОбработчиковСобытия(Ложь);	

КонецПроцедуры

&НаСервере
Процедура ЮТР_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка, ДополнительныйПараметр)
		
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	//ЮТР начало изменения 
	//{33 432}, 26.05.2015
	//
	//Если НЕ ЗначениеЗаполнено(Объект.Ссылка) И НЕ Пользователи.РолиДоступны("ДобавлениеИзменениеДанныхДляНачисленияЗарплатыРасширенная, ЧтениеДанныхДляНачисленияЗарплатыРасширенная") Тогда
	//	ДоступныеВидыДокумента = ЮТР_ПолучитьДоступныеВидыДокумента();
	//	Если ДоступныеВидыДокумента.Количество() > 0 Тогда
	//		Объект.ЮТР_ВидДокумента = ДоступныеВидыДокумента[0];
	//	КонецЕсли;
	//КонецЕсли;
	//ЮТР окончание изменени
	
	РасчетЗарплатыРасширенныйФормы.ИнициализироватьМеханизмПересчетаДокументаПриРедактировании(ЭтаФорма);
	КадровыйУчетФормы.ФормаКадровогоДокументаПриСозданииНаСервере(ЭтаФорма);
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
	ИспользуетсяРасчетЗарплаты = ПолучитьФункциональнуюОпцию("ИспользоватьРасчетЗарплатыРасширенная");
	
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
		
		Если Параметры.Свойство("СтрокаСписочногоДокумента") Тогда
			
			Параметры.Свойство("АдресСпискаПодобранныхСотрудников", АдресСпискаПодобранныхСотрудников);
			
			РедактированиеСтрокиСписочногоДокумента = Истина;
			Объект.ЕжегодныеОтпуска.Очистить();
			
			СтрокаСписочногоДокумента = Параметры.СтрокаСписочногоДокумента;
			ЗарплатаКадрыРасширенныйКлиентСервер.ЗаполнитьЗначенияЗаполненныхСвойств(Объект, СтрокаСписочногоДокумента);
			
			ТабличныеЧастиОбъекта = СтрокаСписочногоДокумента.ТабличныеЧасти;
			Для каждого ОписаниеТабличнойЧасти Из ТабличныеЧастиОбъекта Цикл
				
				Если ОписаниеТабличнойЧасти.Ключ = "ОписаниеТабличныхЧастей" Тогда
					Продолжить;
				КонецЕсли; 
				
				Для каждого СтрокаТЧ Из ОписаниеТабличнойЧасти.Значение Цикл
					ЗаполнитьЗначенияСвойств(Объект[ОписаниеТабличнойЧасти.Ключ].Добавить(), СтрокаТЧ);
				КонецЦикла;
		
			КонецЦикла;
			
			ПриПолученииДанныхНаСервере();
			
			ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиФормы.Нет; 
			АвтоЗаголовок = Ложь;
			
			Заголовок = НСтр("ru='Кадровый перевод'");
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"РасчетчикГруппа",
				"Видимость",
				Ложь
			);
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"БронированиеПозиции",
				"Видимость",
				Ложь
			);
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"Организация",
				"Видимость",
				Ложь
			);
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"ДатаНомер",
				"Видимость",
				Ложь
			);
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"ПодвалДокументаГруппа",
				"Видимость",
				Ложь
			);
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"КоманднаяПанельФормы",
				"Видимость",
				Истина
			);
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"ОК",
				"КнопкаПоУмолчанию",
				Истина
			);
			
			//ЮТР начало изменения
			//{32 576}, 17.04.2015
			//Установка видимости реквизитов для полей, различающихся в строке документа ПриемНаРаботуСписком и в документе ПриемНаРаботу.
			
			ЮТР_УстановитьВидимостьЭлементовРедактированияСтроки(Элементы);
			
			//ЮТР окончание изменения
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
			Объект.ДатаНачала = ТекущаяДатаСеанса();
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			Объект.Начисления.Очистить();
		КонецЕсли; 
		
		Если Параметры.Свойство("Сотрудник") И ЗначениеЗаполнено(Параметры.Сотрудник) Тогда 
			Объект.Сотрудник = Параметры.Сотрудник;
		КонецЕсли;
		
		Если Не Параметры.Свойство("СтрокаСписочногоДокумента") Тогда
			ПриПолученииДанныхНаСервере();
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(Объект.Сотрудник) И Не ЗначениеЗаполнено(Объект.ИсправленныйДокумент) Тогда
			УстановитьТекущиеДанныеСотрудника();
		КонецЕсли;
		
		ОбработатьИзменениеОрганизации(Ложь);
		
	КонецЕсли;
	
	УстановитьДоступностьЭлементов(ЭтаФорма);
	
	КадровыйУчетРасширенный.УстановитьПараметрыВыбораНачисленийПоКатегории(
		ЭтаФорма,
		ОписаниеТаблицыНачислений(),
		КадровыйУчетРасширенный.ПараметрыВыбораКатегорииНачислений());
		
	КадровыйУчетРасширенный.УстановитьПараметрыВыбораНачисленийПоОтношениюКДенежномуСодержанию(
		ЭтаФорма,
		ОписаниеТаблицыНачислений(),
		КадровыйУчетРасширенный.ЗначениеПараметраВыбораНачисленийПоОтношениюКДенежномуСодержанию(ЭтаФорма));	
	
	КадровыйУчетФормыРасширенный.УстановитьОтображениеКнопкиРедактироватьФОТ(ЭтаФорма);
	
	ЗарплатаКадрыРасширенный.УстановитьВидимостьКомандПечатиМногофункциональногоДокумента(ЭтаФорма);
	
	ЗарплатаКадрыРасширенный.УстановитьПредупреждающуюНадписьВМногофункциональныхДокументах(ЭтаФорма, "НачисленияУтверждены");
	
	Если ИспользуетсяРасчетЗарплаты И Не ОграниченияНаУровнеЗаписей.ИзменениеБезОграничений И Объект.НачисленияУтверждены Тогда 
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Элементы.РазрядКатегория.Заголовок = РазрядыКатегорииДолжностей.ИнициализироватьЗаголовокФормыИРеквизитов("РеквизитРазрядКатегорияВКадровыхДокументах");	
	
	ЗарплатаКадрыРасширенный.УстановитьЗначениеСевернойНадбавкиВФорме(ЭтаФорма, Объект.Сотрудник, Объект.ДатаНачала, Объект.ФизическоеЛицо);
	
	ФОИспользоватьШтатноеРасписание = ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание");
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЗаполнитьПоПозицииВГруппеДобавитьОтменить",
		"Видимость",
		ФОИспользоватьШтатноеРасписание);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЗаполнитьПоПозицииВГруппеКнопокДобавитьПродолжить",
		"Видимость",
		ФОИспользоватьШтатноеРасписание);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЗаполнитьПоПозицииВГруппеКнопокДобавитьУдалить",
		"Видимость",
		ФОИспользоватьШтатноеРасписание);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЗаполнитьПоПозицииВГруппеДобавитьОтменитьЕО",
		"Видимость",
		ФОИспользоватьШтатноеРасписание);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЗаполнитьПоПозицииВГруппеКнопокДобавитьПродолжить1",
		"Видимость",
		ФОИспользоватьШтатноеРасписание);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЗаполнитьПоПозицииВГруппеКнопокДобавитьУдалитьЕО",
		"Видимость",
		ФОИспользоватьШтатноеРасписание);
	
	//ЮТР окончание изменения
	
	//ЮТР начало изменения 
	//{32 549}, 17.04.2015
	//Преобразование строки сведений об изменениях ТД в ТЗ.
	//{33 293}, 10.04.2015
	//Видимость элементов в зависимости от вида документа.
	Если Не Параметры.Свойство("СтрокаСписочногоДокумента") Тогда
		ЮТР_ЗаполнитьТаблицуИзмененийТД();
	КонецЕсли;
	//ЮТР окончание изменени
		
	КадровыйУчетФормыРасширенный.РазместитьКомандуПроверкиШтатномуРасписанию(ЭтаФорма);
	
	СформироватьНадписьПраваНаОтпуск();
	
	ЗаполнитьВторичныеДанныеКадровогоРезерва();
		
	ПрочитатьРазмерАвансаПоУмолчанию();
	
	//ЮТР начало изменения 
	//
	//комментарий
	ЮТР_УправлениеРаботойТиповыхФормВызовСервера.УстановитьСвойстваЭлементовУправленияПоВидуДокумента(Объект.ЮТР_ВидДокумента, ЭтаФорма, "Документ.КадровыйПеревод");
	Если НЕ Пользователи.РолиДоступны("ЮТР_ДобавлениеИзменениеКадровоеИзменениеВидДокументаИзменениеРежимаРаботыИУсловийТруда, ЮТР_ДобавлениеИзменениеКадровоеИзменениеВидДокументаКадровыйПеревод") Тогда
		Элементы.ЮТР_РежимРабочегоВремени.Доступность = Ложь;
	КонецЕсли;

	//ЮТР окончание изменения
		
КонецПроцедуры

&НаСервере
Функция ЮТР_ПолучитьДоступныеВидыДокумента()
	
	МассивВидовДокумента = Новый Массив;
	МассивРолей = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЮТР_ВидыДокументаКадровоеИзменениеРоли.Ссылка КАК Ссылка,
		|	ЮТР_ВидыДокументаКадровоеИзменениеРоли.Роль.Имя КАК Роль
		|ИЗ
		|	Справочник.ЮТР_ВидыДокументов.Роли КАК ЮТР_ВидыДокументаКадровоеИзменениеРоли
		|ГДЕ
		|	ЮТР_ВидыДокументаКадровоеИзменениеРоли.Ссылка.ВидДокумента = &ВидДокумента
		|ИТОГИ ПО
		|	Ссылка";
				   
	Запрос.УстановитьПараметр("ВидДокумента", "КадровыйПеревод");
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Пока Выборка.Следующий() Цикл
		ВыборкаДетальныеЗаписи = Выборка.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			МассивРолей.Добавить(ВыборкаДетальныеЗаписи.Роль);		
		КонецЦикла;
		Если МассивРолей.Количество() > 0 Тогда
			ДоступныеРоли = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(МассивРолей);
		Иначе
			Продолжить;
		КонецЕсли;
		Если Пользователи.РолиДоступны(ДоступныеРоли) Тогда
			МассивВидовДокумента.Добавить(Выборка.Ссылка);
		КонецЕсли;
		МассивРолей.Очистить();
	КонецЦикла;
	
	Возврат МассивВидовДокумента;
	
КонецФункции

&НаСервере
Процедура УстановитьСвойстваЭлементовУправленияПоВидуДокументаСервер()
	
	ЮТР_УправлениеРаботойТиповыхФормВызовСервера.УстановитьСвойстваЭлементовУправленияПоВидуДокумента(Объект.ЮТР_ВидДокумента, ЭтаФорма, "Документ.КадровыйПеревод");
	ДополнитьФорму();
	
	Если НЕ Пользователи.РолиДоступны("ЮТР_ДобавлениеИзменениеКадровоеИзменениеВидДокументаИзменениеРежимаРаботыИУсловийТруда, ЮТР_ДобавлениеИзменениеКадровоеИзменениеВидДокументаКадровыйПеревод") Тогда
		Элементы.ЮТР_РежимРабочегоВремени.Доступность = Ложь;
	КонецЕсли;

	УстановитьДоступностьЭлементовИзмененияДанныхСотрудника();
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ЮТР_ВидДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СтруктураОтбор = Новый Структура;
	СтруктураОтбор.Вставить("ВидДокумента", "КадровыйПеревод");
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Отбор", СтруктураОтбор);
	ОткрытьФорму("Справочник.ЮТР_ВидыДокументов.ФормаВыбора", ПараметрыОткрытия, ЭтаФорма);
	
КонецПроцедуры
	
&НаСервере
Процедура ОбработкаВыбораНаСервере(ВыбранноеЗначение)
	
	Объект.ЮТР_ВидДокумента = ВыбранноеЗначение;
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Если ЮТР_ТекущийВидДокумента <> Объект.ЮТР_ВидДокумента Тогда
			
			//При изменении графика данное изменение должно происходить датой приема на работу/кадрового перевода, если график при этом не был установлен.
			Если Объект.ЮТР_ВидДокумента = ПредопределенноеЗначение("Справочник.ЮТР_ВидыДокументов.ИзменениеГрафика") Тогда
				Объект.ДатаНачала = ЮТР_ПолучитьДатуПоследнегоИзмененияРежимаРабочегоВремени(Объект.Сотрудник, 
					?(ЗначениеЗаполнено(Объект.ДатаНачала), Объект.ДатаНачала, Объект.Дата));
			Иначе
				Объект.ДатаНачала = Объект.Дата;	
			КонецЕсли;
			
			ЮТР_ТекущийВидДокумента = Объект.ЮТР_ВидДокумента;
		КонецЕсли;
		
		УстановитьДоступностьЭлементов(ЭтаФорма);

		УстановитьСвойстваЭлементовУправленияПоВидуДокументаСервер();	
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура ЮТР_ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ОбработкаВыбораНаСервере(ВыбранноеЗначение);
	
КонецПроцедуры

