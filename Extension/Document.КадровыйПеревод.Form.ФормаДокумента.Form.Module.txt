
&НаСервере
Процедура ЮТР_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьВыполнениеПослеОбработчиковСобытия("ЮТР_ПриСозданииНаСервереПосле", Неопределено);
	УстановитьВыполнениеОбработчиковСобытия(Ложь);	

КонецПроцедуры

&НаСервере
Процедура ЮТР_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка, ДополнительныйПараметр)
		
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
		
	РасчетЗарплатыРасширенныйФормы.ИнициализироватьМеханизмПересчетаДокументаПриРедактировании(ЭтаФорма);
	КадровыйУчетФормы.ФормаКадровогоДокументаПриСозданииНаСервере(ЭтаФорма);
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
	ИспользуетсяРасчетЗарплаты = ПолучитьФункциональнуюОпцию("ИспользоватьРасчетЗарплатыРасширенная");
	
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
		
		Если Параметры.Свойство("СтрокаСписочногоДокумента") Тогда
			
			Параметры.Свойство("АдресСпискаПодобранныхСотрудников", АдресСпискаПодобранныхСотрудников);
			
			РедактированиеСтрокиСписочногоДокумента = Истина;
			Объект.ЕжегодныеОтпуска.Очистить();
			
			СтрокаСписочногоДокумента = Параметры.СтрокаСписочногоДокумента;
			ЗарплатаКадрыРасширенныйКлиентСервер.ЗаполнитьЗначенияЗаполненныхСвойств(Объект, СтрокаСписочногоДокумента);
			
			ТабличныеЧастиОбъекта = СтрокаСписочногоДокумента.ТабличныеЧасти;
			Для каждого ОписаниеТабличнойЧасти Из ТабличныеЧастиОбъекта Цикл
				
				Если ОписаниеТабличнойЧасти.Ключ = "ОписаниеТабличныхЧастей" Тогда
					Продолжить;
				КонецЕсли; 
				
				Для каждого СтрокаТЧ Из ОписаниеТабличнойЧасти.Значение Цикл
					ЗаполнитьЗначенияСвойств(Объект[ОписаниеТабличнойЧасти.Ключ].Добавить(), СтрокаТЧ);
				КонецЦикла;
		
			КонецЦикла;
			
			ЮТР_ПриПолученииДанныхНаСервере();
			
			ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиФормы.Нет; 
			АвтоЗаголовок = Ложь;
			
			Заголовок = НСтр("ru='Кадровый перевод'");
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"РасчетчикГруппа",
				"Видимость",
				Ложь
			);
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"БронированиеПозиции",
				"Видимость",
				Ложь
			);
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"Организация",
				"Видимость",
				Ложь
			);
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"ДатаНомер",
				"Видимость",
				Ложь
			);
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"ПодвалДокументаГруппа",
				"Видимость",
				Ложь
			);
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"КоманднаяПанельФормы",
				"Видимость",
				Истина
			);
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"ОК",
				"КнопкаПоУмолчанию",
				Истина
			);
			
			//ЮТР начало изменения
			//{32 576}, 17.04.2015
			//Установка видимости реквизитов для полей, различающихся в строке документа ПриемНаРаботуСписком и в документе ПриемНаРаботу.
			
			ЮТР_УстановитьВидимостьЭлементовРедактированияСтроки(Элементы);
			
			//ЮТР окончание изменения
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
			Объект.ДатаНачала = ТекущаяДатаСеанса();
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			Объект.Начисления.Очистить();
		КонецЕсли; 
		
		Если Параметры.Свойство("Сотрудник") И ЗначениеЗаполнено(Параметры.Сотрудник) Тогда 
			Объект.Сотрудник = Параметры.Сотрудник;
		КонецЕсли;
		
		Если Не Параметры.Свойство("СтрокаСписочногоДокумента") Тогда
			ЮТР_ПриПолученииДанныхНаСервере();
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(Объект.Сотрудник) И Не ЗначениеЗаполнено(Объект.ИсправленныйДокумент) Тогда
			УстановитьТекущиеДанныеСотрудника();
		КонецЕсли;
		
		ОбработатьИзменениеОрганизации(Ложь);
		
	КонецЕсли;
	
	УстановитьДоступностьЭлементов(ЭтаФорма);
	
	КадровыйУчетРасширенный.УстановитьПараметрыВыбораНачисленийПоКатегории(
		ЭтаФорма,
		ОписаниеТаблицыНачислений(),
		КадровыйУчетРасширенный.ПараметрыВыбораКатегорииНачислений());
		
	КадровыйУчетРасширенный.УстановитьПараметрыВыбораНачисленийПоОтношениюКДенежномуСодержанию(
		ЭтаФорма,
		ОписаниеТаблицыНачислений(),
		КадровыйУчетРасширенный.ЗначениеПараметраВыбораНачисленийПоОтношениюКДенежномуСодержанию(ЭтаФорма));	
	
	КадровыйУчетФормыРасширенный.УстановитьОтображениеКнопкиРедактироватьФОТ(ЭтаФорма);
	
	ЗарплатаКадрыРасширенный.УстановитьВидимостьКомандПечатиМногофункциональногоДокумента(ЭтаФорма);
	
	ЗарплатаКадрыРасширенный.УстановитьПредупреждающуюНадписьВМногофункциональныхДокументах(ЭтаФорма, "НачисленияУтверждены");
	
	Если ИспользуетсяРасчетЗарплаты И Не ОграниченияНаУровнеЗаписей.ИзменениеБезОграничений И Объект.НачисленияУтверждены Тогда 
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Элементы.РазрядКатегория.Заголовок = РазрядыКатегорииДолжностей.ИнициализироватьЗаголовокФормыИРеквизитов("РеквизитРазрядКатегорияВКадровыхДокументах");	
	
	ЗарплатаКадрыРасширенный.УстановитьЗначениеСевернойНадбавкиВФорме(ЭтаФорма, Объект.Сотрудник, Объект.ДатаНачала, Объект.ФизическоеЛицо);
	
	ФОИспользоватьШтатноеРасписание = ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание");
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЗаполнитьПоПозицииВГруппеДобавитьОтменить",
		"Видимость",
		ФОИспользоватьШтатноеРасписание);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЗаполнитьПоПозицииВГруппеКнопокДобавитьПродолжить",
		"Видимость",
		ФОИспользоватьШтатноеРасписание);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЗаполнитьПоПозицииВГруппеКнопокДобавитьУдалить",
		"Видимость",
		ФОИспользоватьШтатноеРасписание);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЗаполнитьПоПозицииВГруппеДобавитьОтменитьЕО",
		"Видимость",
		ФОИспользоватьШтатноеРасписание);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЗаполнитьПоПозицииВГруппеКнопокДобавитьПродолжить1",
		"Видимость",
		ФОИспользоватьШтатноеРасписание);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЗаполнитьПоПозицииВГруппеКнопокДобавитьУдалитьЕО",
		"Видимость",
		ФОИспользоватьШтатноеРасписание);
	
	//ЮТР окончание изменения
	
	//ЮТР начало изменения 
	//{32 549}, 17.04.2015
	//Преобразование строки сведений об изменениях ТД в ТЗ.
	//{33 293}, 10.04.2015
	//Видимость элементов в зависимости от вида документа.
	Если Не Параметры.Свойство("СтрокаСписочногоДокумента") Тогда
		ЮТР_ЗаполнитьТаблицуИзмененийТД();
	КонецЕсли;
	//ЮТР окончание изменени
		
	КадровыйУчетФормыРасширенный.РазместитьКомандуПроверкиШтатномуРасписанию(ЭтаФорма);
	
	СформироватьНадписьПраваНаОтпуск();
	
	ЗаполнитьВторичныеДанныеКадровогоРезерва();
		
	ПрочитатьРазмерАвансаПоУмолчанию();
	
	//ЮТР начало изменения 
	//{33 432}, 01.06.2015
	//Установка доступности элементов в зависимости от ролей указанных для вида документа
	ЮТР_УправлениеРаботойТиповыхФормВызовСервера.УстановитьСвойстваЭлементовУправленияПоВидуДокумента(Объект.ЮТР_ВидДокумента, ЭтаФорма, "Документ.КадровыйПеревод");
	Если НЕ Пользователи.РолиДоступны("ЮТР_ДобавлениеИзменениеКадровоеИзменениеВидДокументаИзменениеРежимаРаботыИУсловийТруда, ЮТР_ДобавлениеИзменениеКадровоеИзменениеВидДокументаКадровыйПеревод") Тогда
		Элементы.ЮТР_РежимРабочегоВремени.Доступность = Ложь;
	КонецЕсли;

	//ЮТР окончание изменения
	
	//ЮТР начало изменения
	//{33 432}, 14.06.2015
	//Установка доступности реквизита ЮТР_ИндивидуальнаяСистемаОплатыТруда
	ЮТР_УстановитьДоступностьИндивидуальнойСистемыОплатыТруда();
	//ЮТР конец изменения
	
КонецПроцедуры

&НаСервере
Процедура ЮТР_УстановитьСвойстваЭлементовУправленияПоВидуДокументаСервер()
	
	УстановитьДоступностьЭлементовИзмененияДанныхСотрудника();
	
	ЮТР_УправлениеРаботойТиповыхФормВызовСервера.УстановитьСвойстваЭлементовУправленияПоВидуДокумента(Объект.ЮТР_ВидДокумента, ЭтаФорма, "Документ.КадровыйПеревод");
	ДополнитьФорму();
	
	Если НЕ Пользователи.РолиДоступны("ЮТР_ДобавлениеИзменениеКадровоеИзменениеВидДокументаИзменениеРежимаРаботыИУсловийТруда, ЮТР_ДобавлениеИзменениеКадровоеИзменениеВидДокументаКадровыйПеревод") Тогда
		Элементы.ЮТР_РежимРабочегоВремени.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ЮТР_ВидДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СтруктураОтбор = Новый Структура;
	СтруктураОтбор.Вставить("ВидДокумента", "КадровыйПеревод");
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Отбор", СтруктураОтбор);
	ОткрытьФорму("Справочник.ЮТР_ВидыДокументов.ФормаВыбора", ПараметрыОткрытия, ЭтаФорма);
	
КонецПроцедуры
	
&НаСервере
Процедура ЮТР_ОбработкаВыбораНаСервере(ВыбранноеЗначение)
	
	Объект.ЮТР_ВидДокумента = ВыбранноеЗначение;
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Если ЮТР_ТекущийВидДокумента <> Объект.ЮТР_ВидДокумента Тогда
			
			//При изменении графика данное изменение должно происходить датой приема на работу/кадрового перевода, если график при этом не был установлен.
			Если Объект.ЮТР_ВидДокумента = ПредопределенноеЗначение("Справочник.ЮТР_ВидыДокументов.ИзменениеГрафика") Тогда
				Объект.ДатаНачала = ЮТР_ПолучитьДатуПоследнегоИзмененияРежимаРабочегоВремени(Объект.Сотрудник, 
					?(ЗначениеЗаполнено(Объект.ДатаНачала), Объект.ДатаНачала, Объект.Дата));
			Иначе
				Объект.ДатаНачала = Объект.Дата;	
			КонецЕсли;
			
			ЮТР_ТекущийВидДокумента = Объект.ЮТР_ВидДокумента;
		КонецЕсли;
		
		УстановитьДоступностьЭлементов(ЭтаФорма);

		ЮТР_УстановитьСвойстваЭлементовУправленияПоВидуДокументаСервер();	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ЮТР_ОбработкаВыбораНаСервере(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	УстановитьВыполнениеПослеОбработчиковСобытия("ЮТР_ПередЗаписьюПосле", Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ПередЗаписьюПосле(Отказ, ПараметрыЗаписи, ДополнительныйПараметр)
	
	//ЮТР начало изменения
	//{32 549}, 17.04.2015
	//Преобразование ТЗ в строку сведений об изменениях ТД.
	ЮТР_ЗаписатьТаблицуИзмененийТД();
	//ЮТР окончание изменения

КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ПослеЗаписи(ПараметрыЗаписи)
	
	УстановитьВыполнениеПослеОбработчиковСобытия("ЮТР_ПослеЗаписиПосле", Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ПослеЗаписиПосле(ПараметрыЗаписи, ДополнительныйПараметр)
	
	//ЮТР начало изменения
	//{32 650}, 08.05.2015 
	//Необходимо для создания бизнес-процесса ознакомления руководителя структурного подразделения о заполнении реквизита Режим рабочего времени
	Если Объект.ЮТР_ВидДокумента = ПредопределенноеЗначение("Справочник.ЮТР_ВидыДокументов.ИзменениеРежимаРаботы") И Объект.Проведен Тогда
		ЮТР_ОповещениеПользователейКлиент.ОповеститьРуководителяСтруктурногоПодразделения(Объект.Ссылка);
	КонецЕсли;
	//ЮТР окончание изменения

КонецПроцедуры

&НаКлиенте
Процедура ЮТР_СотрудникПриИзменении(Элемент)
	
	УстановитьВыполнениеПослеОбработчиковСобытия("ЮТР_СотрудникПриИзмененииПосле", Неопределено)
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_СотрудникПриИзмененииПосле(Элемент, ДополнительныйПараметр)
	
	Если Объект.ЮТР_ВидДокумента = ПредопределенноеЗначение("Справочник.ЮТР_ВидыДокументов.ПереводНаИндивидуальнуюОплату") И Объект.ЮТР_ИндивидуальнаяСистемаОплатыТруда Тогда
		Объект.ЮТР_ИндивидуальнаяСистемаОплатыТруда = Ложь;
	КонецЕсли;
	
	Объект.ЮТР_РежимРабочегоВремени = ЮТР_ПолучитьРежимРабочегоВремениСотрудника(Объект.Сотрудник); 
	ЮТР_ЗаполнитьГрафикНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЮТР_ЗаполнитьГрафикНаСервере()
	
	ЮТР_ЗаполнитьСписокВыбораГрафикаРаботы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ДатаНачалаПриИзменении(Элемент)
	
	ЮТР_ДатаНачалаПриИзмененииНаСервере();
	Если Объект.ЮТР_ВидДокумента = ПредопределенноеЗначение("Справочник.ЮТР_ВидыДокументов.ПереводНаИндивидуальнуюОплату") И Объект.ЮТР_ИндивидуальнаяСистемаОплатыТруда Тогда
		ЮТР_УстановитьИндивидуальнуюСистемуОплатыТруда();	
	КонецЕсли;
	
	УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ЮТР_ИндивидуальнаяСистемаОплатыТрудаПриИзменении(Элемент)
	
	ЮТР_УстановитьИндивидуальнуюСистемуОплатыТруда();
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_УстановитьИндивидуальнуюСистемуОплатыТруда()
		
	Если Объект.ЮТР_ИндивидуальнаяСистемаОплатыТруда Тогда
		Объект.Начисления.Очистить();
		ФОТ = 0;
	Иначе
		ЗаполнитьНачисленияПоПозицииНаСервере();
		РассчитатьФОТНаСервере();
		ЗарплатаКадрыРасширенныйКлиент.СброситьФлагНеобходимостиВыполненияРасчета(ЭтаФорма);
	КонецЕсли;

КонецПроцедуры

//ЮТР начало изменения
//{32 547}, 09.04.2015
//Заполнение списка выбора графика работы.
&НаСервереБезКонтекста
Процедура ЮТР_ЗаполнитьСписокВыбораГрафикаРаботы(ЭтаФорма)
	ЭтаФорма.Элементы.График.СписокВыбора.ЗагрузитьЗначения(ЮТР_ПолучитьГрафикиРаботы(ЭтаФорма.Объект.ЮТР_РежимРабочегоВремени));
КонецПроцедуры
//ЮТР окончание изменения

//ЮТР начало изменения
//{32 547}, 09.04.2015
//Заполнение списка выбора графика работы и установка графика работы.
&НаСервере
Процедура ЮТР_РежимРабочегоВремениПриИзмененииНаСервере()
	
	СписокВыбора = ЭтаФорма.Элементы.График.СписокВыбора;
	
	СписокВыбора.ЗагрузитьЗначения(ЮТР_ПолучитьГрафикиРаботы(ЭтаФорма.Объект.ЮТР_РежимРабочегоВремени));
	
	МассивАвтозаполнения = Новый Массив;
	МассивАвтозаполнения.Добавить(Справочники.ЮТР_РежимыРабочегоВремени.Пятидневка36);
	МассивАвтозаполнения.Добавить(Справочники.ЮТР_РежимыРабочегоВремени.Пятидневка40);
	
	Если ЗначениеЗаполнено(ЭтаФорма.Объект.ГрафикРаботы) Тогда
			
		Если СписокВыбора.НайтиПоЗначению(ЭтаФорма.Объект.ГрафикРаботы) = Неопределено Тогда
			ЭтаФорма.Объект.ГрафикРаботы = Неопределено;
			Если МассивАвтозаполнения.Найти(ЭтаФорма.Объект.ЮТР_РежимРабочегоВремени) <> Неопределено Тогда
				ЭтаФорма.Объект.ГрафикРаботы = ?(СписокВыбора.Количество() > 0, СписокВыбора[0].Значение, Неопределено);
			КонецЕсли;
		КонецЕсли;
			
	Иначе
			
		Если МассивАвтозаполнения.Найти(ЭтаФорма.Объект.ЮТР_РежимРабочегоВремени) <> Неопределено Тогда
			ЭтаФорма.Объект.ГрафикРаботы = ?(СписокВыбора.Количество() > 0, СписокВыбора[0].Значение, Неопределено);
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры
//ЮТР окончание изменения

//ЮТР начало изменения
//{32 547}, 09.04.2015
//Получение массива графиков работы для режима рабочего времени.
&НаСервереБезКонтекста
Функция ЮТР_ПолучитьГрафикиРаботы(РежимРабочегоВремени)
	Возврат Справочники.ЮТР_РежимыРабочегоВремени.ПолучитьГрафикиРаботыДляРежимаРабочегоВремени(РежимРабочегоВремени);
КонецФункции
//ЮТР окончание изменения

//ЮТР начало изменения
//{33 293}, 10.04.2015
//Видимость элементов в зависимости от вида документа.
&НаКлиентеНаСервереБезКонтекста
Процедура ЮТР_УстановитьВидимостьЭлементовПоВидуДокумента(Форма)
	
	МассивНастроек = ЮТР_ПолучитьНастройкиВидимостиПоВидуДокумента(Форма.Объект.ЮТР_ВидДокумента);
	
	Для каждого НастройкаЭлемента Из МассивНастроек Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Форма.Элементы,
			НастройкаЭлемента.Имя,
			"Видимость",
			НастройкаЭлемента.Видимость);
	КонецЦикла;
		
КонецПроцедуры
//ЮТР окончание изменения

//ЮТР начало изменения
//{33 293}, 23.04.2015
//Получение видимых элементов формы в зависимости от вида документа.
&НаСервереБезКонтекста
Функция ЮТР_ПолучитьНастройкиВидимостиПоВидуДокумента(ВидДокумента)
	
	Возврат Справочники.ЮТР_ВидыДокументов.ПолучитьНастройкиВидимостиЭлементовФормы(ВидДокумента);
	
КонецФункции
//ЮТР окончание изменения

//ЮТР начало изменения
//{32 547}, 13.04.2015
//Установка режима рабочего времени.
&НаСервереБезКонтекста
Функция ЮТР_ПолучитьРежимРабочегоВремениСотрудника(Сотрудник, Период = Неопределено)
	
	РежимРабочегоВремени = РегистрыСведений.ЮТР_ПериодическиеДанныеСотрудника.ПолучитьДанныеСотрудника(
		Сотрудник, 
		,
		"РежимРабочегоВремени").РежимРабочегоВремени;
	
	Возврат РежимРабочегоВремени;
	
КонецФункции
//ЮТР окончание изменения

//ЮТР начало изменения
//{32 549}, 17.04.2015
//Преобразование строки сведений об изменениях ТД в ТЗ.
&НаСервере
Процедура ЮТР_ЗаполнитьТаблицуИзмененийТД()
	
	Если Не ПустаяСтрока(Объект.ЮТР_ИзмененияТД) Тогда
		ЮТР_ИзмененияТД.Загрузить(ЗначениеИзСтрокиВнутр(Объект.ЮТР_ИзмененияТД));
	КонецЕсли;
	
КонецПроцедуры
//ЮТР окончание изменения

//ЮТР начало изменения
//{32 549}, 17.04.2015
//Преобразование ТЗ в строку сведений об изменениях ТД.
&НаСервере
Процедура ЮТР_ЗаписатьТаблицуИзмененийТД()
	
	Объект.ЮТР_ИзмененияТД = ?(ЮТР_ИзмененияТД.Количество() > 0, ЗначениеВСтрокуВнутр(ЮТР_ИзмененияТД.Выгрузить()), "");
	
КонецПроцедуры
//ЮТР окончание изменения

//ЮТР начало изменения
//{32 576}, 17.04.2015
//Установка видимости реквизитов для полей, различающихся в строке документа КадровыйПереводСписком и в документе КадровыйПеревод.
&НаКлиентеНаСервереБезКонтекста
Процедура ЮТР_УстановитьВидимостьЭлементовРедактированияСтроки(Элементы)
	
	МассивНевидимых = Новый Массив;
	МассивНевидимых.Добавить("ЮТР_ВидДокумента");
	МассивНевидимых.Добавить("ЮТР_ИзмененияТД");
	
	Для каждого ЭлементФормы Из МассивНевидимых Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				ЭлементФормы,
				"Видимость",
				Ложь);
	КонецЦикла;
	
КонецПроцедуры
//ЮТР окончание изменения

//ЮТР начало изменения
//{33 547}, 28.04.2015
//Получение последней даты установки режима рабочего времени.
&НаСервереБезКонтекста
Функция ЮТР_ПолучитьДатуПоследнегоИзмененияРежимаРабочегоВремени(Сотрудник, Период)
	
	ПоследняяДата = Период;
	ДанныеСотрудника = РегистрыСведений.ЮТР_ПериодическиеДанныеСотрудника.ПолучитьДанныеСотрудника(
		Сотрудник, 
		Новый Граница(Период, ВидГраницы.Исключая),
		"РежимРабочегоВремени");
		
	ДанныеСотрудника.Свойство("Период", ПоследняяДата);	
	
	Возврат ПоследняяДата;
	
КонецФункции
//ЮТР окончание изменения

//ЮТР начало изменения
//{32 547}, 09.04.2015
//Заполнение списка выбора графиков работы.
&НаКлиенте
Процедура ЮТР_РежимРабочегоВремениПриИзменении(Элемент)
	ЮТР_РежимРабочегоВремениПриИзмененииНаСервере();
КонецПроцедуры
//ЮТР окончание изменения

&НаСервере
Процедура ЮТР_ПриПолученииДанныхНаСервере()
	
	УстановитьДоступностьРегистрацииНачислений();
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПрочитатьВремяРегистрации();
	
	ДополнитьФорму();
	
	УстановитьЗначениеРайонногоКоэффициентаВФорме();
	ЗарплатаКадрыРасширенный.УстановитьТекущиеЗначенияНачисленийРКИСНСотрудника(ЭтаФорма, Объект.Сотрудник, ВремяРегистрации, Объект.ИсправленныйДокумент);
	
	ЗарплатаКадрыРасширенный.УстановитьИзменениеСоставаПлановыхНачислений(ЭтаФорма, Объект.ИзменитьНачисления);
	УстановитьФункциональныеОпцииФормы();
	
	ТекущееОбособленноеПодразделение = Объект.ОбособленноеПодразделение;
	
	ИспользоватьШтатноеРасписание = ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание");
	
	ОстаткиОтпусков.ДополнитьСведениямиОПредыдущихЕжегодныхОтпускахСотрудника(Объект, "ДатаНачала");
	
	ОбновитьИндивидуальныйГрафик();
	
	УстановитьДоступностьЭлементовИзмененияДанныхСотрудника();
	УстановитьВидимостьРасчетныхПолей();
	УстановитьВидимостьРазмераЛьгот(ЭтотОбъект);
	
	УстановитьТекущиеКадровыеДанные();
	УстановитьТекущийАванс();
	
	УстановитьПоказРазмераАванса(ЭтаФорма);
	
	ДанныеНачисленийВРеквизит(Объект);
	ПрочитатьТарифнуюСетку();
	
	ЗарплатаКадрыРасширенный.УстановитьОтображениеПолейПересчетаТарифнойСтавки(ЭтаФорма, ОписаниеТаблицыНачислений(), ОграниченияНаУровнеЗаписей.ЧтениеБезОграничений);
	ЗарплатаКадрыРасширенный.УстановитьТекстПоясненияКПорядкуПересчетаТарифныхСтавок(ЭтаФорма, "ПорядокРасчетаСтоимостиЕдиницыВремени");
	ЗарплатаКадрыРасширенный.УстановитьРазмерностьСовокупнойТарифнойСтавки(ЭтаФорма);
	ЗарплатаКадрыРасширенный.УстановитьКомментарийКРазмеруСовокупнойТарифнойСтавки(ЭтаФорма, Объект.ВидТарифнойСтавки,"СовокупнаяТарифнаяСтавкаРазмерность");
	
	РассчитатьИтогиПоФОТ(ЭтаФорма);
	РассчитатьИтогиПоРазмеруЛьгот(ЭтотОбъект);
	
	УстановитьОтображениеНадписей();
	
	ОписаниеФормы = ОписаниеФормыРедактирующейДанныеКонтрактаДоговора();
	КонтрактыДоговорыСотрудниковФормы.НастроитьФормуПоВидуДоговора(ЭтотОбъект, ОписаниеФормы, ?(Объект.СменаВидаДоговора, Объект.ВидДоговора, ТекущийВидДоговора));
	КонтрактыДоговорыСотрудниковФормы.УстановитьЗаголовокПоляСменаВидаДоговора(ЭтотОбъект, ОписаниеФормы, ТекущийВидДоговора);
	УстановитьВидимостьПолейДоговораКонтракта(ЭтотОбъект, Объект.СменаВидаДоговора);
	ЮТР_УстановитьДоступностьПолейДоговораКонтракта();
	
	УстановитьДоступностьПолейУчетаСтажаПФР(ЭтотОбъект);
	
	РазрядыКатегорииДолжностей.УстановитьСвязиПараметровВыбораРазрядаКадровогоПриказа(ЭтотОбъект);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.Грейды") Тогда
		Модуль = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("Грейды");
		Модуль.УстановитьЗначениеПодсказкиГрейда(ЭтотОбъект, Объект.Грейд);
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ЛьготыСотрудников") Тогда
		Модуль = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("ЛьготыСотрудников");
		Модуль.УстановитьВидимостьГруппыЛьготы(Элементы);
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.КадровыйРезерв") Тогда
		Модуль = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("КадровыйРезервФормы");
		Модуль.ДополнитьФормуДокументаКадровымРезервом(ЭтаФорма);
	КонецЕсли;
	
	Если Объект.Проведен
		И Не Объект.БронированиеПозиции
		И ПолучитьФункциональнуюОпциюФормы("ИспользоватьБронированиеПозиций") Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"БронированиеПозиции",
			"Видимость",
			Ложь);
		
	КонецЕсли; 
	
	//ЮТР начало изменения
	//{32 547}, 09.04.2015
	//Заполнение списка выбора графика работы.
	ЮТР_ЗаполнитьСписокВыбораГрафикаРаботы(ЭтаФорма);
	//ЮТР окончание изменения
	
	//ЮТР начало изменения
	//{33 293}, 28.04.2015
	//Установка текщего вида документа.
	ЮТР_ТекущийВидДокумента = Объект.ЮТР_ВидДокумента;
	//ЮТР окончание изменения
	
КонецПроцедуры

&НаСервере
Процедура ЮТР_ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ЮТР_ПриПолученииДанныхНаСервере();
	УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ПозицияШтатногоРасписанияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ДолжностьПоШтатномуРасписанию) Тогда
		ЮТР_ПозицияШтатногоРасписанияПриИзмененииНаСервере();
	Иначе
		УстановитьДоступностьЭлементов(ЭтаФорма);
		УстановитьКомментарии(ЭтаФорма);
	КонецЕсли; 

	УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЮТР_ПозицияШтатногоРасписанияПриИзмененииНаСервере(ПерезаполнитьТекущиеНачисленияСотрудника = Истина)

	УстановитьПривилегированныйРежим(Истина);
	//ЮТР начало изменения 
	//{32 516}, 03.04.2015
	//Заполнение реквизита «Территория» значением из штатного расписания.	
	//РеквизитыПозиции = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ДолжностьПоШтатномуРасписанию, "Подразделение,Должность");
	РеквизитыПозиции = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ДолжностьПоШтатномуРасписанию, "Подразделение,Должность,ЮТР_Территория");
	Объект.Территория = РеквизитыПозиции.ЮТР_Территория;
	//ЮТР окончание изменения
	Объект.Подразделение = РеквизитыПозиции.Подразделение;
	Объект.Должность = РеквизитыПозиции.Должность;
	
	УстановитьЗначениеРайонногоКоэффициентаВФорме();
	
	ЗаполнитьНачисленияПоПозицииНаСервере(Истина, ПерезаполнитьТекущиеНачисленияСотрудника);
	ПрочитатьТарифнуюСетку();
	
	ЗаполнитьЕжегодныеОтпускаПоПозицииНаСервере(Истина);
	
	ЗаполнитьГрафик(Истина);
	
	ЗаполнитьРазрядПоУмолчанию();
	
	ЗаполнитьГрейдПоУмолчанию();
	
	ЗаполнитьЛьготыПоПозиции();
	РассчитатьРазмерЛьготНаСервере();
	
	ЗаполнитьКадровыйРезерв();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЮТР_ДатаНачалаПриИзмененииНаСервере()
	
	ПрочитатьВремяРегистрации();
	
	Если ПолучитьФункциональнуюОпциюФормы("ИспользоватьШтатноеРасписание")
		И ЗначениеЗаполнено(Объект.ДолжностьПоШтатномуРасписанию) Тогда
		
		Если Объект.ДатаНачала < ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ДолжностьПоШтатномуРасписанию, "ДатаУтверждения") Тогда
			Объект.ДолжностьПоШтатномуРасписанию = Справочники.ШтатноеРасписание.ПустаяСсылка();
		КонецЕсли;
		
	КонецЕсли; 
	
	УстановитьТекущиеДанныеСотрудника();
	
	ОбновитьИндивидуальныйГрафик();
	ПрочитатьТарифнуюСетку();
	ЗаполнитьДанныеТарифнойСеткиНаСервере();
		
	Если Объект.ИзменитьПодразделениеИДолжность
		И Объект.ИзменитьНачисления
		И ЗначениеЗаполнено(Объект.ДолжностьПоШтатномуРасписанию) Тогда
		
		ЮТР_ПозицияШтатногоРасписанияПриИзмененииНаСервере(Ложь);
		
	КонецЕсли;
	
	ЗаполнитьКадровыйРезерв();
	УстановитьОтображениеНадписей();
	
	ЗаполнитьСведенияОКонтрактеДоговореСотрудника();
	ОписаниеФормы = ОписаниеФормыРедактирующейДанныеКонтрактаДоговора();
	КонтрактыДоговорыСотрудниковФормы.НастроитьФормуПоВидуДоговора(ЭтотОбъект, ОписаниеФормы, ?(Объект.СменаВидаДоговора, Объект.ВидДоговора, ТекущийВидДоговора));
	КонтрактыДоговорыСотрудниковФормы.УстановитьЗаголовокПоляСменаВидаДоговора(ЭтотОбъект, ОписаниеФормы, ТекущийВидДоговора);
	КонтрактыДоговорыСотрудниковФормы.УстановитьДоступностьПолейСрочногоТрудовогоДоговора(ЭтотОбъект, ОписаниеФормы, Объект.ИзменитьСведенияОДоговореКонтракте, Объект.СрочныйДоговор);
	
КонецПроцедуры	

&НаКлиенте
Процедура ЮТР_СменаВидаДоговораПриИзменении(Элемент)
	
	ЮТР_СменаВидаДоговораПриИзмененииНаСервере();
	УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЮТР_СменаВидаДоговораПриИзмененииНаСервере()
	
	Если Объект.СменаВидаДоговора Тогда
		Если Не Объект.ИзменитьПодразделениеИДолжность Тогда
			Объект.ИзменитьПодразделениеИДолжность = Истина;
			УстановитьДанныеРабочегоМеста();
			УстановитьДоступностьЭлементов(ЭтотОбъект);
			УстановитьКомментарии(ЭтотОбъект);
			ПрочитатьТарифнуюСетку();
		КонецЕсли;
		Если Не Объект.ИзменитьГрафикРаботы Тогда
			Объект.ИзменитьГрафикРаботы = Истина;
			ЗаполнитьГрафик();
		КонецЕсли;
		Если НЕ Объект.ИзменитьСведенияОДоговореКонтракте Тогда
			Объект.ИзменитьСведенияОДоговореКонтракте = Истина;
			ЮТР_УстановитьДоступностьПолейДоговораКонтракта();
		КонецЕсли;		
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") Тогда
		Модуль = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("ГосударственнаяСлужба");
		Модуль.УстановитьВидДоговораВКадровомПереводе(ЭтотОбъект, ТекущийВидДоговора, Объект.СменаВидаДоговора);
	КонецЕсли;
	
	КонтрактыДоговорыСотрудниковФормы.НастроитьФормуПоВидуДоговора(ЭтотОбъект, ОписаниеФормыРедактирующейДанныеКонтрактаДоговора(), ?(Объект.СменаВидаДоговора, Объект.ВидДоговора, ТекущийВидДоговора));
	
	КадровыйУчетРасширенный.УстановитьПараметрыВыбораНачисленийПоОтношениюКДенежномуСодержанию(
		ЭтаФорма,
		ОписаниеТаблицыНачислений(),
		КадровыйУчетРасширенный.ЗначениеПараметраВыбораНачисленийПоОтношениюКДенежномуСодержанию(ЭтаФорма));
		
	УстановитьВидимостьПолейДоговораКонтракта(ЭтотОбъект, Объект.СменаВидаДоговора);
		
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ИзменитьСведенияОДоговореКонтрактеПриИзменении(Элемент)
	
	ЮТР_ИзменитьСведенияОДоговореКонтрактеПриИзмененииНаСервере();
	УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЮТР_ИзменитьСведенияОДоговореКонтрактеПриИзмененииНаСервере()    
	ЮТР_УстановитьДоступностьПолейДоговораКонтракта();
КонецПроцедуры

&НаСервере
Процедура ЮТР_УстановитьДоступностьПолейДоговораКонтракта()
	
	ИменаЭлементовИзменяющихДанныеДоговораКонтракта = ЮТР_ИменаЭлементовИзменяющихДанныеДоговораКонтракта();
	
	Для каждого ИмяЭлемента Из ИменаЭлементовИзменяющихДанныеДоговораКонтракта Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, ИмяЭлемента, "Доступность", Объект.ИзменитьСведенияОДоговореКонтракте);
	КонецЦикла;
	
	КонтрактыДоговорыСотрудниковФормы.УстановитьДоступностьПолейСрочногоТрудовогоДоговора(ЭтотОбъект, ОписаниеФормыРедактирующейДанныеКонтрактаДоговора(), Объект.ИзменитьСведенияОДоговореКонтракте, Объект.СрочныйДоговор);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЮТР_ИменаЭлементовИзменяющихДанныеДоговораКонтракта()
	
	ИменаЭлементов = Новый Массив;
	ИменаЭлементов.Добавить("ТрудовойДоговорНомер");
	ИменаЭлементов.Добавить("ТрудовойДоговорДата");
	ИменаЭлементов.Добавить("СрочныйДоговор");
	ИменаЭлементов.Добавить("ОснованиеПредставителяНанимателя");
	ИменаЭлементов.Добавить("ОборудованиеРабочегоМеста");
	ИменаЭлементов.Добавить("ИныеУсловияДоговора");
	ИменаЭлементов.Добавить("ИныеУсловияДоговора");
	ИменаЭлементов.Добавить("ВидАктаГосоргана");
	ИменаЭлементов.Добавить("СпособПоступленияНаСлужбу");
	ИменаЭлементов.Добавить("ПоступлениеНаСлужбуВпервые");
	
	//ЮТР начало изменения
	//{32 550}, 07.04.2015
	//Добавление в список элементов, изменяющих данные, реквизита ЮТР_ДатаИзмененияРедакцииТД.
	
	ИменаЭлементов.Добавить("ЮТР_ДатаИзмененияРедакцииТД");
	ИменаЭлементов.Добавить("ЮТР_ДатаДополнительногоСоглашения");
	ИменаЭлементов.Добавить("ЮТР_ИзмененияТД");
	ИменаЭлементов.Добавить("ЮТР_НомерДополнительногоСоглашения");
	ИменаЭлементов.Добавить("ЮТР_ПредоставлятьАвтотранспорт");
	ИменаЭлементов.Добавить("ЮТР_ДатаЗаявленияСотрудника");
	
	//ЮТР окончание изменения
	
	Возврат ИменаЭлементов;
	
КонецФункции

&НаСервере
Процедура ЮТР_УстановитьДоступностьИндивидуальнойСистемыОплатыТруда()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		ЭтаФорма.Элементы,
		"ЮТР_ИндивидуальнаяСистемаОплатыТруда",
		"Доступность",
		ЭтаФорма.Объект.ИзменитьНачисления);

	КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ИзменилисьНачисленияПриИзменении(Элемент)
		
	УстановитьВыполнениеПослеОбработчиковСобытия("ЮТР_ИзменилисьНачисленияПриИзмененииПосле", Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ИзменилисьНачисленияПриИзмененииПосле(Элемент, ДополнительныйПараметр)
	
	ЮТР_УстановитьДоступностьИндивидуальнойСистемыОплатыТруда();
	
КонецПроцедуры