
&НаСервере
Процедура ЮТР_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	РасчетЗарплатыРасширенныйФормы.ИнициализироватьМеханизмПересчетаДокументаПриРедактировании(ЭтаФорма);
	КадровыйУчетФормы.ФормаКадровогоДокументаПриСозданииНаСервере(ЭтаФорма);
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
	ИспользуетсяРасчетЗарплаты = ПолучитьФункциональнуюОпцию("ИспользоватьРасчетЗарплатыРасширенная");
	
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
		
		Если Параметры.Свойство("СтрокаСписочногоДокумента") Тогда
			
			Параметры.Свойство("АдресСпискаПодобранныхСотрудников", АдресСпискаПодобранныхСотрудников);
			
			РедактированиеСтрокиСписочногоДокумента = Истина;
			Объект.ЕжегодныеОтпуска.Очистить();
			
			СтрокаСписочногоДокумента = Параметры.СтрокаСписочногоДокумента;
			ЗарплатаКадрыРасширенныйКлиентСервер.ЗаполнитьЗначенияЗаполненныхСвойств(Объект, СтрокаСписочногоДокумента);
			
			ТабличныеЧастиОбъекта = СтрокаСписочногоДокумента.ТабличныеЧасти;
			Для каждого ОписаниеТабличнойЧасти Из ТабличныеЧастиОбъекта Цикл
				
				Если ОписаниеТабличнойЧасти.Ключ = "ОписаниеТабличныхЧастей" Тогда
					Продолжить;
				КонецЕсли; 
				
				Для каждого СтрокаТЧ Из ОписаниеТабличнойЧасти.Значение Цикл
					ЗаполнитьЗначенияСвойств(Объект[ОписаниеТабличнойЧасти.Ключ].Добавить(), СтрокаТЧ);
				КонецЦикла;
		
			КонецЦикла;
			
			ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиФормы.Нет; 
			АвтоЗаголовок = Ложь;
			
			Заголовок = НСтр("ru='Прием на работу'");
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"РасчетчикГруппа",
				"Видимость",
				Ложь
			);
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"БронированиеПозиции",
				"Видимость",
				Ложь
			);
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"Организация",
				"Видимость",
				Ложь
			);
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"ГруппаНомерДатаПриказаОПриеме",
				"Видимость",
				Ложь
			);
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"ПодвалДокументаГруппа",
				"Видимость",
				Ложь
			);
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"КоманднаяПанельФормы",
				"Видимость",
				Истина
			);
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"ОК",
				"КнопкаПоУмолчанию",
				Истина
			);
			
			//ЮТР начало изменения
			//{32 571}, 16.04.2015
			//Установка видимости реквизитов для полей, различающихся в строке документа ПриемНаРаботуСписком и в документе ПриемНаРаботу.
			ЮТР_УстановитьВидимостьЭлементовРедактированияСтроки(Элементы);
			//ЮТР окончание изменения
			
		КонецЕсли;
			
		Если Не ЗначениеЗаполнено(Объект.ДатаПриема) Тогда
			Объект.ДатаПриема = ТекущаяДатаСеанса();
		КонецЕсли;
		
		// Очистим реквизит Сотрудник, если он уже принят.
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) И Параметры.ЗначениеКопирования.Проведен Тогда
			Объект.Сотрудник = Справочники.Сотрудники.ПустаяСсылка();
			Объект.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка();
		КонецЕсли; 
		
		Если Параметры.ЗначенияЗаполнения.Свойство("Начисления") 
			И Параметры.ЗначенияЗаполнения.Начисления <> Неопределено 
			И Параметры.ЗначенияЗаполнения.Начисления.Количество() > 0 Тогда 
			Объект.Начисления.Загрузить(Параметры.ЗначенияЗаполнения.Начисления.Выгрузить());
		КонецЕсли;
		
		Если Параметры.ЗначенияЗаполнения.Свойство("Показатели") 
			И Параметры.ЗначенияЗаполнения.Показатели <> Неопределено 
			И Параметры.ЗначенияЗаполнения.Показатели.Количество() > 0 Тогда 
			Объект.Показатели.Загрузить(Параметры.ЗначенияЗаполнения.Показатели.Выгрузить());
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.ГрафикРаботы) Тогда
			
			ЗначенияДляЗаполнения = Новый Структура;
			ФиксированныеЗначения = Новый Массив;
			
			Если ЗначениеЗаполнено(Объект.ДолжностьПоШтатномуРасписанию) Тогда
				ЗначенияДляЗаполнения.Вставить("ДолжностьПоШтатномуРасписанию", "Объект.ДолжностьПоШтатномуРасписанию");
				ФиксированныеЗначения.Добавить("ДолжностьПоШтатномуРасписанию");
			КонецЕсли;
				
			Если ЗначениеЗаполнено(Объект.Организация) Тогда
				ЗначенияДляЗаполнения.Вставить("Организация", "Объект.Организация");
				ФиксированныеЗначения.Добавить("Организация");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
				ЗначенияДляЗаполнения.Вставить("Подразделение", "Объект.Подразделение");
				ФиксированныеЗначения.Добавить("Подразделение");
			КонецЕсли;
			
			Если ФиксированныеЗначения.Количество() > 0 Тогда
				ЗначенияДляЗаполнения.Вставить("ГрафикРаботы", "Объект.ГрафикРаботы");
				ЗарплатаКадры.ЗаполнитьЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения, ФиксированныеЗначения);
			КонецЕсли;
			
		КонецЕсли;
		
		УстановитьУсловияПриема(ЭтаФорма);
		
		Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
			
			Если Не ЗначениеЗаполнено(Объект.ВидЗанятости) Тогда
				УстановитьВидЗанятостиНовогоСотрудника(ЭтаФорма);
			КонецЕсли;
			
		КонецЕсли;
	
		ПриПолученииДанныхНаСервере(Объект);
		
		Если Не Параметры.Свойство("СтрокаСписочногоДокумента") Тогда
			ЮТР_ЗаполнитьДанныеФормыПоОрганизации();
		КонецЕсли;
		
	КонецЕсли;
	
	КадровыйУчетРасширенный.УстановитьПараметрыВыбораНачисленийПоКатегории(
		ЭтаФорма,
		ОписаниеТаблицыНачислений(),
		КадровыйУчетРасширенный.ПараметрыВыбораКатегорииНачислений());
		
	КадровыйУчетРасширенный.УстановитьПараметрыВыбораНачисленийПоОтношениюКДенежномуСодержанию(
		ЭтаФорма,
		ОписаниеТаблицыНачислений(),
		КадровыйУчетРасширенный.ЗначениеПараметраВыбораНачисленийПоОтношениюКДенежномуСодержанию(ЭтаФорма));	
	
	КадровыйУчетФормыРасширенный.УстановитьОтображениеКнопкиРедактироватьФОТ(ЭтаФорма);
	
	ЗарплатаКадрыРасширенный.УстановитьВидимостьКомандПечатиМногофункциональногоДокумента(ЭтаФорма);
	
	ЗарплатаКадрыРасширенный.УстановитьПредупреждающуюНадписьВМногофункциональныхДокументах(ЭтаФорма, "НачисленияУтверждены");
	
	Если ИспользуетсяРасчетЗарплаты И Не ОграниченияНаУровнеЗаписей.ИзменениеБезОграничений И Объект.НачисленияУтверждены Тогда 
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	ЗарплатаКадрыРасширенный.УстановитьЗначениеСевернойНадбавкиВФорме(ЭтаФорма, Объект.Сотрудник, Объект.ДатаПриема, Объект.ФизическоеЛицо);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"НачисленияЗаполнитьПоПозиции",
		"Видимость",
		ИспользоватьШтатноеРасписание);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЕжегодныеОтпускаЗаполнитьЕжегодныеОтпускаПоПозиции",
		"Видимость",
		ИспользоватьШтатноеРасписание);
		
	КадровыйУчетФормыРасширенный.РазместитьКомандуПроверкиШтатномуРасписанию(ЭтаФорма);
	
	Если ПолучитьФункциональнуюОпциюФормы("ИспользоватьМногофункциональностьДокументовЗарплатаКадры") Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ГруппаСведенияЛевая",
			"ОтображатьЗаголовок",
			Ложь);
		
	КонецЕсли; 
		
	Элементы.РазрядКатегория.Заголовок = РазрядыКатегорииДолжностей.ИнициализироватьЗаголовокФормыИРеквизитов("РеквизитРазрядКатегорияВКадровыхДокументах");	
	
	НадписьПраваНаОтпуск = ОстаткиОтпусков.НадписьПраваНаОтпуск(Объект.ЕжегодныеОтпуска,ТолькоПросмотр);
	
	//ЮТР начало изменения 
	////{32 778}, 28.04.2015
	//Использование реквизитов ЮТР_Аванс, ЮТР_СпособРасчетаАванса справочника Организации
	
	// РазмерАвансаПоУмолчанию = РасчетЗарплатыФормы.РазмерАвансаВПроцентахПоУмолчанию(Объект.Организация);	
	РазмерАвансаПоУмолчанию = ЮТР_РасчетЗарплатыФормы.РазмерАвансаПоУмолчанию(Объект.Организация);
	ЮТР_СпособРасчетаАванса = ЮТР_РасчетЗарплатыФормы.СпособРасчетаАвансаПоУмолчанию(Объект.Организация);
	//ЮТР окончание изменения
	
	
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
		
		Если Объект.Начисления.Количество() > 0 Тогда
			РассчитатьФОТНаСервере();
			ЗарплатаКадрыРасширенный.РассчитатьЗначенияСовокупныхТарифныхСтавок(ЭтаФорма, ВремяРегистрации, ОписаниеТаблицыНачислений(), , Объект.Сотрудник, Объект.ГрафикРаботы);
		КонецЕсли; 
		
	КонецЕсли;
	
	//ЮТР начало изменения 
	//{32 557}, 07.04.2015
	//Установка доступности поля ЮТР_Наставник в зависимости от значения признака ЮТР_МолодойСпециалист.
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ЮТР_Наставник",
			"Доступность",
			Объект.ЮТР_МолодойСпециалист);
	//ЮТР окончание изменения
	
	//ЮТР начало изменения
	//{32 549}, 16.04.2015
	//Преобразование строки сведений об изменениях ТД в ТЗ.
	Если Не Параметры.Свойство("СтрокаСписочногоДокумента") Тогда
		ЮТР_ЗаполнитьТаблицуИзмененийТД();
	КонецЕсли;
	//ЮТР окончание изменения
	
	УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
КонецПроцедуры


&НаКлиенте
Процедура ЮТР_ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	УстановитьВыполнениеПослеОбработчиковСобытия("ЮТР_ПередЗаписьюПосле", Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ПередЗаписьюПосле(Отказ, ПараметрыЗаписи, ДополнительныйПараметр)
	
	//ЮТР начало изменения
	//{32 549}, 16.04.2015
	//Преобразование ТЗ в строку сведений об изменениях ТД.
	ЮТР_ЗаписатьТаблицуИзмененийТД();
	//ЮТР окончание изменения

КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ПослеЗаписи(ПараметрыЗаписи)
	
	УстановитьВыполнениеПослеОбработчиковСобытия("ЮТР_ПослеЗаписиПосле", Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ПослеЗаписиПосле(ПараметрыЗаписи, ДополнительныйПараметр)
	
	//ЮТР начало изменения
	//{32 650}, 21.04.2015 
	//Необходимо для создания бизнес-процесса ознакомления руководителя структурного подразделения о заполнении реквизита Режим рабочего времени
	Если НЕ ЗначениеЗаполнено(Объект.ГрафикРаботы) И Объект.Проведен Тогда
		ЮТР_ОповещениеПользователейКлиент.ОповеститьРуководителяСтруктурногоПодразделения(Объект.Ссылка);
	КонецЕсли;
	//ЮТР окончание изменения

КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ОрганизацияПриИзменении(Элемент)
	
	ЮТР_ОрганизацияПриИзмененииНаСервере();
	//ЮТР начало изменения 
	////{32 778}, 28.04.2015
	//Использование реквизитов ЮТР_Аванс, ЮТР_СпособРасчетаАванса справочника Организации		
	УстановитьПоказРазмераАванса(ЭтаФорма);
	//ЮТР окончание изменения

	УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЮТР_ОрганизацияПриИзмененииНаСервере()
	
	ЗначенияДляЗаполнения = Новый Структура;
	ЗначенияДляЗаполнения.Вставить("Организация",	"Объект.Организация");
	ЗначенияДляЗаполнения.Вставить("Подразделение",	"Объект.Подразделение");
	ЗначенияДляЗаполнения.Вставить("ГрафикРаботы",	"Объект.ГрафикРаботы");
	
	ЗарплатаКадры.ЗаполнитьЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("Организация"));
	
	ЮТР_ЗаполнитьДанныеФормыПоОрганизации();
	
	ПриИзмененииРеквизитовОпределяющихОграниченияНаУровнеЗаписей();
	
	УстановитьФункциональныеОпцииФормы();
	
	ЮТР_УстановитьЗначениеРайонногоКоэффициентаВФорме();
	
	//ЮТР начало изменения 
	////{32 778}, 28.04.2015
	//Использование реквизитов ЮТР_Аванс, ЮТР_СпособРасчетаАванса справочника Организации
	
	//РазмерАвансаПоУмолчанию = РасчетЗарплатыФормы.РазмерАвансаВПроцентахПоУмолчанию(Объект.Организация);
	ЮТР_РасчетЗарплатыФормы.ПолучитьАвансПоЗначениюОрганизации(Объект.Организация, Объект.Аванс ,Объект.СпособРасчетаАванса);
	РазмерАвансаПоУмолчанию = ЮТР_РасчетЗарплатыФормы.РазмерАвансаПоУмолчанию(Объект.Организация);
	ЮТР_СпособРасчетаАванса = ЮТР_РасчетЗарплатыФормы.СпособРасчетаАвансаПоУмолчанию(Объект.Организация);
	//ЮТР окончание изменения

КонецПроцедуры

&НаКлиенте
Процедура ЮТР_СпособРасчетаАвансаПриИзменении(Элемент)
	
	//ЮТР начало изменения 
	////{32 778}, 28.04.2015
	//Использование реквизитов ЮТР_Аванс, ЮТР_СпособРасчетаАванса справочника Организации
	
	//Если Объект.СпособРасчетаАванса = ПредопределенноеЗначение("Перечисление.СпособыРасчетаАванса.ПроцентомОтТарифа") Тогда
	//	Объект.Аванс = РазмерАвансаПоУмолчанию;
	//КонецЕсли; 
	
	Если Объект.СпособРасчетаАванса = ЮТР_СпособРасчетаАванса Тогда
		Объект.Аванс = РазмерАвансаПоУмолчанию;
	Иначе
		Объект.Аванс = 0;	
	КонецЕсли;
	//ЮТР окончание изменения

КонецПроцедуры

&НаКлиенте
Процедура ЮТР_СрочныйДоговорПриИзменении(Элемент)
	
	УстановитьВыполнениеПослеОбработчиковСобытия("ЮТР_СрочныйДоговорПриИзмененииПосле", Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_СрочныйДоговорПриИзмененииПосле(Элемент, ДополнительныйПараметр)
	
	//ЮТР начало изменения 
	//{32 543}, 09.04.2015
	//Установка доступности реквизита ЮТР_ЗамещаемыйСотрудник в зависимости от основания срочного ТД.
	ЮТР_УстановитьДоступностьЗамещаемогоСотрудника(ЭтаФорма, Истина);		
	//ЮТР окончание изменения

КонецПроцедуры

//ЮТР начало изменения 
//{32 557}, 07.04.2015
//Установка доступности и значения поля ЮТР_Наставник в зависимости от значения признака ЮТР_МолодойСпециалист.
&НаКлиенте
Процедура ЮТР_МолодойСпециалистПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ЮТР_Наставник",
			"Доступность",
			Объект.ЮТР_МолодойСпециалист);
			
	Если Не Объект.ЮТР_МолодойСпециалист Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьРеквизитФормыПоПути(
			ЭтаФорма, 
			"Объект.ЮТР_Наставник", 
			ПредопределенноеЗначение("Справочник.Сотрудники.ПустаяСсылка"));
	КонецЕсли;			
			
КонецПроцедуры
//ЮТР окончание изменения

//ЮТР начало изменения 
//{32 543}, 09.04.2015
//Установка доступности реквизита ЮТР_ЗамещаемыйСотрудник в зависимости от основания срочного ТД.
&НаКлиенте
Процедура ЮТР_ОснованиеСрочногоДоговораПриИзменении(Элемент)
	ЮТР_УстановитьДоступностьЗамещаемогоСотрудника(ЭтаФорма, Истина);
КонецПроцедуры
//ЮТР окончание изменения

//ЮТР начало изменения
//{32 547}, 09.04.2015
//Установка графика работы в случае выбора режима 5-дневка и заполнение списка выбора графиков работы.
&НаКлиенте
Процедура ЮТР_РежимРабочегоВремениПриИзменении(Элемент)
	ЮТР_РежимРабочегоВремениПриИзмененииНаСервере();
КонецПроцедуры
//ЮТР окончание изменения

&НаСервере
Процедура ЮТР_ПриПолученииДанныхНаСервере(ТекущийОбъект)
	
	УстановитьДоступностьРегистрацииНачислений();
	
	ИспользоватьШтатноеРасписание = ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание");
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПрочитатьВремяРегистрации();
	
	ЗаполнитьСведенияСотрудника();
	
	ДополнитьФорму();
	
	ЮТР_УстановитьЗначениеРайонногоКоэффициентаВФорме();
	УстановитьФункциональныеОпцииФормы();
	
	ДанныеВРеквизит();
	ПрочитатьТарифнуюСетку();
	
	УстановитьПоказРазмераАванса(ЭтаФорма);
	
	УстановитьВидимостьРасчетныхПолей();
	УстановитьВидимостьРазмераЛьгот(ЭтотОбъект);
	
	ВидЗанятостиПредыдущий = ТекущийОбъект.ВидЗанятости;
	ВидДоговораПредыдущий = ТекущийОбъект.ВидДоговора;
	
	ЗарплатаКадрыРасширенный.УстановитьОтображениеПолейПересчетаТарифнойСтавки(ЭтаФорма, ОписаниеТаблицыНачислений(), ОграниченияНаУровнеЗаписей.ЧтениеБезОграничений);
	ЗарплатаКадрыРасширенный.УстановитьТекстПоясненияКПорядкуПересчетаТарифныхСтавок(ЭтаФорма, "ПорядокРасчетаСтоимостиЕдиницыВремени");
	ЗарплатаКадрыРасширенный.УстановитьРазмерностьСовокупнойТарифнойСтавки(ЭтаФорма);
	ЗарплатаКадрыРасширенный.УстановитьКомментарийКРазмеруСовокупнойТарифнойСтавки(ЭтаФорма, Объект.ВидТарифнойСтавки,"СовокупнаяТарифнаяСтавкаРазмерность");
	
	РассчитатьИтогиПоФОТ(ЭтаФорма);
	РассчитатьИтогиПоРазмеруЛьгот(ЭтотОбъект);
	ЗапомнитьУсловияПриемаПозицииШтатногоРасписания();
	
	УстановитьОтображениеНадписей();     

	ОписаниеФормы = ОписаниеФормыРедактирующейДанныеКонтрактаДоговора();
	КонтрактыДоговорыСотрудниковФормы.НастроитьФормуПоВидуДоговора(ЭтотОбъект, ОписаниеФормы, Объект.ВидДоговора);
	КонтрактыДоговорыСотрудниковФормы.ЗаполнитьСписокВыбораВидаДоговора(Элементы.ВидДоговора.СписокВыбора); 
	КонтрактыДоговорыСотрудниковФормы.УстановитьДоступностьПолейСрочногоТрудовогоДоговора(ЭтотОбъект, ОписаниеФормы, Истина, Объект.СрочныйДоговор);
	
	//ЮТР начало изменения 
	//{32 543}, 09.04.2015
	//Установка доступности реквизита ЮТР_ЗамещаемыйСотрудник в зависимости от основания срочного ТД.
	ЮТР_УстановитьДоступностьЗамещаемогоСотрудника(ЭтаФорма);		
	//ЮТР окончание изменения
	
	//ЮТР начало изменения
	//{32 547}, 09.04.2015
	//Заполнение списка выбора графика работы.
	ЮТР_ЗаполнитьСписокВыбораГрафикаРаботы(ЭтаФорма);
	//ЮТР окончание изменения
	
	РазрядыКатегорииДолжностей.УстановитьСвязиПараметровВыбораРазрядаКадровогоПриказа(ЭтотОбъект);
	
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба.КлассныеЧиныРанги") Тогда
		Модуль = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("КлассныеЧиныРанги");
		Модуль.УстановитьПредставлениеКлассногоЧинаРанга(ЭтаФорма.КлассныйЧинРангПредставление, Объект.Сотрудник);  
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.Грейды") Тогда
		Модуль = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("Грейды");
		Модуль.УстановитьЗначениеПодсказкиГрейда(ЭтотОбъект, Объект.Грейд);
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ЛьготыСотрудников") Тогда
		Модуль = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("ЛьготыСотрудников");
		Модуль.УстановитьВидимостьГруппыЛьготы(Элементы);
	КонецЕсли;
	
	Если Объект.Проведен
		И Не Объект.БронированиеПозиции
		И ПолучитьФункциональнуюОпциюФормы("ИспользоватьБронированиеПозиций") Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"БронированиеПозиции",
			"Видимость",
			Ложь);
		
	КонецЕсли; 
	
	УстановитьОтображениеПодсказкиДлительностиИспытательногоСрока(ЭтаФорма);
	
КонецПроцедуры

//ЮТР начало изменения 
//{32 543}, 09.04.2015
//Установка доступности реквизита ЮТР_ЗамещаемыйСотрудник в зависимости от основания срочного ТД.
&НаКлиентеНаСервереБезКонтекста
Процедура ЮТР_УстановитьДоступностьЗамещаемогоСотрудника(ЭтаФорма, ОчищатьЗначение = Ложь)
	
	Доступность = (ЭтаФорма.Объект.ОснованиеСрочногоДоговора = ПредопределенноеЗначение("Справочник.ОснованияЗаключенияСрочныхТрудовыхДоговоров.Статья59Ч1П1"));
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			ЭтаФорма.Элементы,
			"ЮТР_ЗамещаемыйСотрудник",
			"Доступность",
			Доступность);
			
	Если (Не Доступность) И (ОчищатьЗначение = Истина) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьРеквизитФормыПоПути(
			ЭтаФорма, 
			"Объект.ЮТР_ЗамещаемыйСотрудник", 
			ПредопределенноеЗначение("Справочник.Сотрудники.ПустаяСсылка"));
	КонецЕсли;
	
КонецПроцедуры
//ЮТР окончание изменения

//ЮТР начало изменения
//{32 547}, 09.04.2015
//Заполнение списка выбора графика работы.
&НаСервереБезКонтекста
Процедура ЮТР_ЗаполнитьСписокВыбораГрафикаРаботы(ЭтаФорма)
	ЭтаФорма.Элементы.График.СписокВыбора.ЗагрузитьЗначения(ЮТР_ПолучитьГрафикиРаботы(ЭтаФорма.Объект.ЮТР_РежимРабочегоВремени));
КонецПроцедуры
//ЮТР окончание изменения

//ЮТР начало изменения
//{32 547}, 09.04.2015
//Заполнение списка выбора графика работы и установка графика работы в случае выбора режима 5-дневка.
&НаСервере
Процедура ЮТР_РежимРабочегоВремениПриИзмененииНаСервере()
	
	СписокВыбора = ЭтаФорма.Элементы.График.СписокВыбора;
	
	СписокВыбора.ЗагрузитьЗначения(ЮТР_ПолучитьГрафикиРаботы(ЭтаФорма.Объект.ЮТР_РежимРабочегоВремени));
	
	МассивАвтозаполнения = Новый Массив;
	МассивАвтозаполнения.Добавить(Справочники.ЮТР_РежимыРабочегоВремени.Пятидневка36);
	МассивАвтозаполнения.Добавить(Справочники.ЮТР_РежимыРабочегоВремени.Пятидневка40);
	
	Если ЗначениеЗаполнено(ЭтаФорма.Объект.ГрафикРаботы) Тогда
			
		Если СписокВыбора.НайтиПоЗначению(ЭтаФорма.Объект.ГрафикРаботы) = Неопределено Тогда
			ЭтаФорма.Объект.ГрафикРаботы = Неопределено;
			Если МассивАвтозаполнения.Найти(ЭтаФорма.Объект.ЮТР_РежимРабочегоВремени) <> Неопределено Тогда
				ЭтаФорма.Объект.ГрафикРаботы = ?(СписокВыбора.Количество() > 0, СписокВыбора[0].Значение, Неопределено);
			КонецЕсли;
		КонецЕсли;
			
	Иначе
			
		Если МассивАвтозаполнения.Найти(ЭтаФорма.Объект.ЮТР_РежимРабочегоВремени) <> Неопределено Тогда
			ЭтаФорма.Объект.ГрафикРаботы = ?(СписокВыбора.Количество() > 0, СписокВыбора[0].Значение, Неопределено);
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры
//ЮТР окончание изменения

//ЮТР начало изменения
//{32 547}, 09.04.2015
//Получение массива графиков работы для режима рабочего времени.
&НаСервереБезКонтекста
Функция ЮТР_ПолучитьГрафикиРаботы(РежимРабочегоВремени)
	Возврат Справочники.ЮТР_РежимыРабочегоВремени.ПолучитьГрафикиРаботыДляРежимаРабочегоВремени(РежимРабочегоВремени);
КонецФункции
//ЮТР окончание изменения

//ЮТР начало изменения
//{32 571}, 16.04.2015
//Установка видимости реквизитов для полей, различающихся в строке документа ПриемНаРаботуСписком и в документе ПриемНаРаботу.
&НаКлиентеНаСервереБезКонтекста
Процедура ЮТР_УстановитьВидимостьЭлементовРедактированияСтроки(Элементы)
	
	МассивНевидимых = Новый Массив;
	МассивНевидимых.Добавить("ЮТР_РуководительТД");
	МассивНевидимых.Добавить("ЮТР_ДолжностьРуководителяТД");
	МассивНевидимых.Добавить("ЮТР_ОснованиеПриема");
	МассивНевидимых.Добавить("ЮТР_ИзмененияТД");
	
	Для каждого ЭлементФормы Из МассивНевидимых Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				ЭлементФормы,
				"Видимость",
				Ложь);
	КонецЦикла;
	
КонецПроцедуры
//ЮТР окончание изменения

//ЮТР начало изменения
//{32 549}, 16.04.2015
//Преобразование строки сведений об изменениях ТД в ТЗ.
&НаСервере
Процедура ЮТР_ЗаполнитьТаблицуИзмененийТД()
	
	Если Не ПустаяСтрока(Объект.ЮТР_ИзмененияТД) Тогда
		ЮТР_ИзмененияТД.Загрузить(ЗначениеИзСтрокиВнутр(Объект.ЮТР_ИзмененияТД));
	КонецЕсли;
	
КонецПроцедуры
//ЮТР окончание изменения

//ЮТР начало изменения
//{32 549}, 16.04.2015
//Преобразование ТЗ в строку сведений об изменениях ТД.
&НаСервере
Процедура ЮТР_ЗаписатьТаблицуИзмененийТД()
	
	Объект.ЮТР_ИзмененияТД = ?(ЮТР_ИзмененияТД.Количество() > 0, ЗначениеВСтрокуВнутр(ЮТР_ИзмененияТД.Выгрузить()), "");
	
КонецПроцедуры
//ЮТР окончание изменения

&НаКлиенте
Процедура ЮТР_ИндивидуальнаяСистемаОплатыТрудаПриИзменении(Элемент)
	
	Если Объект.ЮТР_ИндивидуальнаяСистемаОплатыТруда Тогда
		Объект.Начисления.Очистить();
		ФОТ = 0;
	Иначе
		ЗаполнитьНачисленияПоПозицииНаСервере();
		РассчитатьФОТНаСервере();
		ЗарплатаКадрыРасширенныйКлиент.СброситьФлагНеобходимостиВыполненияРасчета(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ПозицияШтатногоРасписанияПриИзменении(Элемент)
	
	ЮТР_ЗаполнитьПоПозицииНаСервере();
	УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЮТР_ЗаполнитьПоПозицииНаСервере()
	
	//ЮТР начало изменения 
	//{32 516}, 03.04.2015
	//Заполнение реквизита «Территория» значением из штатного расписания.	
	//РеквизитыПозиции = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ДолжностьПоШтатномуРасписанию, "Подразделение,Должность");
	РеквизитыПозиции = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ДолжностьПоШтатномуРасписанию, "Подразделение,Должность,ЮТР_Территория");
	Объект.Территория = РеквизитыПозиции.ЮТР_Территория;
	//ЮТР окончание изменения
	Объект.Подразделение = РеквизитыПозиции.Подразделение;
	Объект.Должность = РеквизитыПозиции.Должность;
		
	ЗапомнитьУсловияПриемаПозицииШтатногоРасписания();
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЮТР_УстановитьЗначениеРайонногоКоэффициентаВФорме();
	
	ЗаполнитьГрафикРаботыПоПозицииНаСервере();
	ЗаполнитьНачисленияПоПозицииНаСервере();
	ПрочитатьТарифнуюСетку();
	ЗаполнитьРазрядПоУмолчанию();
	ЗаполнитьГрейдПоУмолчанию();
	РассчитатьФОТНаСервере();
	ЗаполнитьЕжегодныеОтпускаПоПозицииНаСервере();
	УстановитьУсловияПриема(ЭтаФорма);
	ЗаполнитьЛьготыПоПозиции();
	РассчитатьРазмерЛьготНаСервере();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ДатаПриемаПриИзменении(Элемент)
	
	ЮТР_ДатаПриемаПриИзмененииНаСервере();
	ВыполнитьРасчетФОТ(Истина);
	УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЮТР_ДатаПриемаПриИзмененииНаСервере()
	
	ПрочитатьВремяРегистрации();
	
	Если ИспользоватьШтатноеРасписание И ЗначениеЗаполнено(Объект.ДолжностьПоШтатномуРасписанию) Тогда
		
		Если Объект.ДатаПриема < ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ДолжностьПоШтатномуРасписанию, "ДатаУтверждения") Тогда
			Объект.ДолжностьПоШтатномуРасписанию = Справочники.ШтатноеРасписание.ПустаяСсылка();
			//ЮТР начало изменения 
			//{32 516}, 03.04.2015
			//Заполнение реквизита «Территория» значением из штатного расписания.	
			Объект.Территория = Справочники.ТерриторииВыполненияРабот.ПустаяСсылка();
			//ЮТР окончание изменения
		Иначе
			ЗаполнитьПоПозицииНаСервере();
		КонецЕсли; 
		
	КонецЕсли;
	
	УстановитьПредставленияКомандВводаСтажей();
	ЮТР_УстановитьЗначениеРайонногоКоэффициентаВФорме();
	ЗарплатаКадрыРасширенный.УстановитьЗначениеСевернойНадбавкиВФорме(ЭтаФорма, Объект.Сотрудник, Объект.ДатаПриема, Объект.ФизическоеЛицо);
	
	УстановитьОтображениеНадписей();
	
	ПодходящаяДатаДокумента = Документы.ПриемНаРаботу.ПодходящаяДатаДокумента(Объект.ДатаПриема);
	Если ЗначениеЗаполнено(ПодходящаяДатаДокумента)
		И ПодходящаяДатаДокумента < НачалоДня(Объект.Дата) Тогда
		
		Объект.Дата = ПодходящаяДатаДокумента;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ЮТР_ЗаполнитьДанныеФормыПоОрганизации()
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		Возврат;
	КонецЕсли; 
	
	ЗапрашиваемыеЗначения = Новый Структура;
	ЗапрашиваемыеЗначения.Вставить("Организация", "Объект.Организация");
	
	ЗапрашиваемыеЗначения.Вставить("Руководитель", "Объект.Руководитель");
	ЗапрашиваемыеЗначения.Вставить("ДолжностьРуководителя", "Объект.ДолжностьРуководителя");
	
	//ЮТР начало изменения 
	// {32 542}, 25.03.2015
	// заполнение дополнительных полей на закладке  Трудовой Договор.
	ЗапрашиваемыеЗначения.Вставить("Руководитель", "Объект.ЮТР_РуководительТД");
	ЗапрашиваемыеЗначения.Вставить("ДолжностьРуководителя", "Объект.ЮТР_ДолжностьРуководителяТД");
	//ЮТР окончание изменения

	ЗарплатаКадры.ЗаполнитьЗначенияВФорме(ЭтаФорма, ЗапрашиваемыеЗначения, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("Организация"));	
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ПриИзмененииКоличестваСтавок()
	
	//ЮТР начало изменения
	//{32 567} 15.03.2015
	//Ограничение на количество ставок
	Если Объект.КоличествоСтавок > 1 Тогда
		Объект.КоличествоСтавок = 1;
		Сообщить("Количество ставок не может превышать 1");
	КонецЕсли;
	//ЮТР окончание изменения

	ЗаполнитьНачисленияПоПозицииНаСервере();
	Если ЗначениеЗаполнено(Объект.ДолжностьПоШтатномуРасписанию) Тогда
		ВыполнитьРасчетФОТ();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ЮТР_КоличествоСтавокПриИзменении(Элемент)
	
	ЮТР_ПриИзмененииКоличестваСтавок();
	УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
КонецПроцедуры


&НаКлиенте
Процедура ЮТР_КоличествоСтавокРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	КадровыйУчетРасширенныйКлиент.КоличествоСтавокРегулирование(ЭтаФорма, Объект.КоличествоСтавок, Направление, СтандартнаяОбработка);
	ЮТР_ПриИзмененииКоличестваСтавок();
	УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЮТР_УстановитьЗначениеРайонногоКоэффициентаВФорме()
	
	ЗарплатаКадрыРасширенный.УстановитьЗначениеРайонногоКоэффициентаВФорме(
		ЭтаФорма, Объект.Сотрудник, ВремяРегистрации, Объект.Подразделение, Объект.Организация, ?(ЗначениеЗаполнено(Объект.ДолжностьПоШтатномуРасписанию.ЮТР_МуниципальноеОбразование), Объект.ДолжностьПоШтатномуРасписанию.ЮТР_МуниципальноеОбразование, Объект.Территория), Объект.Должность);
		
	ЗарплатаКадрыРасширенный.УстановитьОтображениеПолейРедактированияРКИСН(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ПодразделениеПриИзменении(Элемент)
	
	ЮТР_ПодразделениеПриИзмененииНаСервере();
	УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЮТР_ПодразделениеПриИзмененииНаСервере()
	
	ЗначенияДляЗаполнения = Новый Структура;
	ЗначенияДляЗаполнения.Вставить("Подразделение",	"Объект.Подразделение");
	ЗначенияДляЗаполнения.Вставить("ГрафикРаботы",	"Объект.ГрафикРаботы");
			
	ЗарплатаКадры.ЗаполнитьЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("Подразделение"));
	
	ЮТР_УстановитьЗначениеРайонногоКоэффициентаВФорме();

КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ДолжностьПриИзменении(Элемент)
	
	ЮТР_ДолжностьПриИзмененииНаСервере();
	УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЮТР_ДолжностьПриИзмененииНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	ПрочитатьТарифнуюСетку();
	ЗаполнитьРазрядПоУмолчанию();
	ЗаполнитьДанныеТарифнойСеткиНаСервере();
	ЗаполнитьГрейдПоУмолчанию();
	ЗаполнитьЛьготыПоПозиции();
	РассчитатьРазмерЛьготНаСервере();
	
	ЮТР_УстановитьЗначениеРайонногоКоэффициентаВФорме();
	
	ОстаткиОтпусков.ПрименитьНастройкиИспользованияОтпускаЗаВредность(
		Объект.ЕжегодныеОтпуска, ?(ЗначениеЗаполнено(Объект.ДолжностьПоШтатномуРасписанию), Объект.ДолжностьПоШтатномуРасписанию, Объект.Должность));
	НадписьПраваНаОтпуск = ОстаткиОтпусков.НадписьПраваНаОтпуск(Объект.ЕжегодныеОтпуска,ТолькоПросмотр);
		
КонецПроцедуры





