#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ЮТР_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
		Если Объект.Ссылка.Пустая() Тогда
		
		ЗначенияДляЗаполнения = Новый Структура(
			"Организация, Ответственный", "Объект.Организация", "Объект.Ответственный");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		Объект.ПричинаСовмещения = Перечисления.ПричиныСовмещения.ИсполнениеОбязанностей;
		Объект.СпособРасчетаДоплаты = Перечисления.СпособыРасчетаДоплатыЗаСовмещение.ПроцентФОТ;
		
		УстановитьПривилегированныйРежим(Истина);
		//ЮТР начало изменения 
		//{32 609}, 14.05.2015
		//Переопределяем типовую функцию для возможности установления вида доплаты в зависимости от вида совмещения.
		//РасчетЗарплатыРасширенныйФормы.ЗаполнитьНачислениеВФормеДокументаПоКатегории(
		//	ЭтаФорма, Объект.Начисление, Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ДоплатаЗаСовмещение);
		ЮТР_РасчетЗарплатыФормы.ЗаполнитьНачислениеВФормеДокументаСовмещениеПоКатегории(ЭтаФорма, Объект.Начисление, Объект.ПричинаСовмещения);
		//ЮТР окончание изменения
		
		УстановитьПривилегированныйРежим(Ложь);
		ЗаполнитьДанныеФормыПоОрганизации();
		
		ЮТР_ПриПолученииДанныхНаСервере();
		
		Если ЗначениеЗаполнено(Объект.СовмещающийСотрудник) Тогда
			ЮТР_СовмещающийСотрудникПриИзмененииНаСервере();
		КонецЕсли; 
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
	УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
КонецПроцедуры

//&НаСервере
Процедура ЮТР_ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ЮТР_ПриПолученииДанныхНаСервере();

	УстановитьВыполнениеОбработчиковСобытия(Ложь);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЮТР_ПричинаСовмещенияРасширениеЗонОбслуживанияПриИзменении(Элемент)
	
	ЮТР_ПричинаСовмещенияПриИзмененииНаСервере();
		
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ПричинаСовмещенияСовмещениеДолжностейПриИзменении(Элемент)
	
	ЮТР_ПричинаСовмещенияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ПричинаСовмещенияИсполнениеОбязанностейПриИзменении(Элемент)
	
	ЮТР_ПричинаСовмещенияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_СпособРасчетаДоплатыПриИзменении(Элемент)
	
	ЮТР_УстановитьДоступностьЭлементовЗависимыхОтСпособРасчетаДоплаты(ЭтаФорма);
	
	ЮТР_РассчитатьДоплату();	
	
	УстановитьВыполнениеОбработчиковСобытия(Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ПроцентДоплатыПриИзменении(Элемент)
	
	ЮТР_РассчитатьДоплату();
	
	УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ДатаНачалаПриИзменении(Элемент)
	
	ЮТР_ДатаНачалаПриИзмененииНаСервере();
	
	УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_СовмещаемаяДолжностьПриИзменении(Элемент)
	
	ЮТР_СовмещаемаяДолжностьПриИзмененииНаСервере();
	
	УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ОтсутствующийСотрудникПриИзменении(Элемент)
	
	ЮТР_ОтсутствующийСотрудникПриИзмененииНаСервере();
	
	УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_СовмещающийСотрудникПриИзменении(Элемент)
	
	ЮТР_СовмещающийСотрудникПриИзмененииНаСервере();
	
	УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_РассчитыватьДоплатуПриИзменении(Элемент)
	
	ЮТР_РассчитыватьДоплатуПриИзмененииНаСервере();
	
	УстановитьВыполнениеОбработчиковСобытия(Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ОрганизацияПриИзменении(Элемент)
	
	ЮТР_ОрганизацияПриИзмененииСервер();

	УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮТР_ОтсутствующийСотрудникЗонаОбслуживанияПриИзменении(Элемент)
	
	ЮТР_ОтсутствующийСотрудникЗонаОбслуживанияПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЮТР_РассчитатьРазмерДоплаты(Команда)
	
	ЮТР_РассчитатьДоплату(Истина);
	
	УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
КонецПроцедуры

#Конецобласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЮТР_СовмещаемаяДолжностьПриИзмененииНаСервере()
	
	УстановитьЗаголовокГруппыФОТДолжности();
	
	ЗаполнитьОтражениеВБухучетеПоПозиции();

	ЗаполнитьФОТСовмещаемый();
	
	ЮТР_РассчитатьДоплату();
	
КонецПроцедуры

&НаСервере
Процедура ЮТР_ДатаНачалаПриИзмененииНаСервере()
	
	ПрочитатьВремяРегистрации();
	ЗаполнитьФОТСовмещающий();
	ЗаполнитьФОТСовмещаемый();
	
	ЮТР_РассчитатьДоплату();
	
	УстановитьОтображениеНадписей();
	
КонецПроцедуры

&НаСервере
Процедура ЮТР_ПричинаСовмещенияПриИзмененииНаСервере()
	
	ЮТР_УстановитьВидимостьЭлементовЗависимыхОтПричинаСовмещения(ЭтаФорма);
	
	Объект.ОтсутствующийСотрудник = Неопределено;
	Объект.СовмещаемаяДолжность = Неопределено;
	
	ОчиститьОтражениеВБухучете();
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЮТР_УстановитьЗначенияЗависимыхРеквизитов();
	
	Объект.ФОТСовмещаемый.Очистить();
	
	УстановитьЗаголовокГруппыФОТСотрудника(Объект.ОтсутствующийСотрудник, "ФОТИсполнениеОбязанностейПроцентом");
	УстановитьЗаголовокГруппыФОТСотрудника(Объект.ОтсутствующийСотрудник, "ФОТИсполнениеОбязанностейСовмещаемый");	
	УстановитьЗаголовокГруппыФОТСотрудника(Объект.СовмещающийСотрудник, "ФОТСовмещающегоСотрудника");
	УстановитьЗаголовокГруппыФОТСотрудника(Объект.СовмещающийСотрудник, "ФОТСовмещающегоДолжностьСотрудника");
	УстановитьЗаголовокГруппыФОТДолжности();

КонецПроцедуры

&НаСервере
Процедура ЮТР_ОрганизацияПриИзмененииСервер()
	
	ЮТР_ПриИзмененииРеквизитовОпределяющихОграниченияНаУровнеЗаписей();
	ЗаполнитьДанныеФормыПоОрганизации();

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЮТР_УстановитьВидимостьЭлементовЗависимыхОтПричинаСовмещения(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы, "ОтсутствующийСотрудник", "Видимость", ЭтоИсполнениеОбязанностей(Форма));
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы, "СовмещаемаяДолжность", "Видимость", ЭтоСовмещениеПрофессийДолжностей(Форма));
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы, "ГруппаСпособыРасчета", "Видимость", Не ЭтоУвеличениеОбъемаРабот(Форма));
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы, "ГруппаТаблицФОТ", "Видимость", Форма.Объект.РассчитыватьДоплату И Не ЭтоУвеличениеОбъемаРабот(Форма));
	//ЮТР начало изменения 
	//{32 639}, 07.05.2015
	//Нужно добавить возможность скрывания добавленного элемента для вида операции "Расширение зоны обслуживания"
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы, "ЮТР_ОтсутствующийСотрудникЗонаОбслуживания", "Видимость", ЮТР_ЭтоРасширениеЗоныОбслуживания(Форма));		
	//ЮТР окончание изменения	
	
	ЮТР_УстановитьВидимостьТаблицФОТ(Форма);
	
КонецПроцедуры

&НаСервере
Процедура ЮТР_УстановитьЗначенияЗависимыхРеквизитов()
	
	// Для случая увеличения объема работ размер доплаты указывается только вручную.
	Если ЭтоУвеличениеОбъемаРабот(ЭтаФорма) И Объект.РассчитыватьДоплату Тогда
		Объект.РассчитыватьДоплату = Ложь;
		ЮТР_УстановитьВидимостьЭлементовЗависимыхОтРассчитыватьДоплату(ЭтаФорма);
	КонецЕсли;
	
	//ЮТР начало изменения 
	//{32 609}, 14.05.2015
	//Добавляем типовую функцию для возможности установления вида доплаты в зависимости от вида совмещения
	ЮТР_РасчетЗарплатыФормы.ЗаполнитьНачислениеВФормеДокументаСовмещениеПоКатегории(ЭтаФорма, Объект.Начисление, Объект.ПричинаСовмещения);
	//ЮТР окончание изменения
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЮТР_УстановитьВидимостьТаблицФОТ(Форма)
	
	Если Не Форма.Объект.РассчитыватьДоплату Тогда
		Возврат;
	КонецЕсли;
			
	Если ЭтоИсполнениеОбязанностей(Форма) И ДоплатаРасчитываетсяПроцентомФОТ(Форма) Тогда
		Форма.Элементы.ГруппаТаблицФОТ.ТекущаяСтраница = Форма.Элементы.СтраницаПроцентФОТЗаИсполнениеОбязанностей;
	ИначеЕсли ЭтоИсполнениеОбязанностей(Форма) И Не ДоплатаРасчитываетсяПроцентомФОТ(Форма) Тогда
		Форма.Элементы.ГруппаТаблицФОТ.ТекущаяСтраница = Форма.Элементы.СтраницаРазницаФОТЗаИсполнениеОбязанностей;
	ИначеЕсли ЭтоСовмещениеПрофессийДолжностей(Форма) И ДоплатаРасчитываетсяПроцентомФОТ(Форма) Тогда
		Форма.Элементы.ГруппаТаблицФОТ.ТекущаяСтраница = Форма.Элементы.СтраницаПроцентФОТЗаСовмещение;
	ИначеЕсли ЭтоСовмещениеПрофессийДолжностей(Форма) И Не ДоплатаРасчитываетсяПроцентомФОТ(Форма) Тогда
		Форма.Элементы.ГруппаТаблицФОТ.ТекущаяСтраница = Форма.Элементы.СтраницаРазницаФОТЗаСовмещение;
		//ЮТР начало изменения 
		//{32 639}, 07.05.2015
		//Добавляем видимость для новых видов операций документа 	
	ИначеЕсли ЮТР_ЭтоРасширениеЗоныОбслуживания(Форма) И ДоплатаРасчитываетсяПроцентомФОТ(Форма) Тогда
		Форма.Элементы.ГруппаТаблицФОТ.ТекущаяСтраница = Форма.Элементы.СтраницаПроцентФОТЗаИсполнениеОбязанностей;
	ИначеЕсли ЮТР_ЭтоРасширениеЗоныОбслуживания(Форма) И Не ДоплатаРасчитываетсяПроцентомФОТ(Форма) Тогда
		Форма.Элементы.ГруппаТаблицФОТ.ТекущаяСтраница = Форма.Элементы.СтраницаРазницаФОТЗаИсполнениеОбязанностей;		
		//ЮТР окончание изменения	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЮТР_ЭтоРасширениеЗоныОбслуживания(Форма)
	
	Результат = ?(Форма.Объект.ПричинаСовмещения = 
		ПредопределенноеЗначение("Перечисление.ПричиныСовмещения.ЮТР_РасширениеЗонОбслуживания"), Истина, Ложь);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЮТР_РассчитатьДоплату(РассчитатьЕслиФиксРасчет = Ложь)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не Объект.РассчитыватьДоплату Тогда
		РассчитатьФОТПоДокументу();
		Возврат;
	КонецЕсли;
	
	Если Не РассчитатьЕслиФиксРасчет И Объект.ФиксРасчет Тогда
		РассчитатьФОТПоДокументу();
		Возврат;
	КонецЕсли;
	
	Если ЭтоСовмещениеПрофессийДолжностей(ЭтаФорма) И ДоплатаРасчитываетсяПроцентомФОТ(ЭтаФорма) Тогда		
		Объект.РазмерДоплаты = Объект.ФОТСовмещаемый.Итог("Размер") * Объект.ПроцентДоплаты / 100;		
	ИначеЕсли ЭтоСовмещениеПрофессийДолжностей(ЭтаФорма) И ДоплатаРасчитываетсяРазницейФОТ(ЭтаФорма) Тогда		
		Объект.РазмерДоплаты = Объект.ФОТСовмещаемый.Итог("Размер") - Объект.ФОТСовмещающегоСотрудника.Итог("Размер");		
	ИначеЕсли ЭтоИсполнениеОбязанностей(ЭтаФорма) И ДоплатаРасчитываетсяПроцентомФОТ(ЭтаФорма) Тогда		
		Объект.РазмерДоплаты = Объект.ФОТСовмещаемый.Итог("Размер") * Объект.ПроцентДоплаты / 100;		
	ИначеЕсли ЭтоИсполнениеОбязанностей(ЭтаФорма) И ДоплатаРасчитываетсяРазницейФОТ(ЭтаФорма) Тогда		
		Объект.РазмерДоплаты = Объект.ФОТСовмещаемый.Итог("Размер") - Объект.ФОТСовмещающегоСотрудника.Итог("Размер");		
		//ЮТР начало изменения 
		//{32 639}, 07.05.2015
		//Для вида операции "Увеличение объема работ" расчет аналогичен виду операции "Исполнение обязанностей".
	ИначеЕсли ЮТР_ЭтоРасширениеЗоныОбслуживания(ЭтаФорма) И ДоплатаРасчитываетсяПроцентомФОТ(ЭтаФорма) Тогда		
		Объект.РазмерДоплаты = Объект.ФОТСовмещаемый.Итог("Размер") * Объект.ПроцентДоплаты / 100;		
	ИначеЕсли ЮТР_ЭтоРасширениеЗоныОбслуживания(ЭтаФорма) И ДоплатаРасчитываетсяРазницейФОТ(ЭтаФорма) Тогда		
		Объект.РазмерДоплаты = Объект.ФОТСовмещаемый.Итог("Размер") - Объект.ФОТСовмещающегоСотрудника.Итог("Размер");		
		//ЮТР окончание изменения
	КонецЕсли;

	Если Объект.РазмерДоплаты < 0 Тогда
		Объект.РазмерДоплаты = 0;
	КонецЕсли;
	
	Объект.ФиксРасчет = Ложь;
	
	РассчитатьФОТПоДокументу();
	
КонецПроцедуры

&НаСервере
Процедура ЮТР_ОтсутствующийСотрудникПриИзмененииНаСервере()
	
	УстановитьЗаголовокГруппыФОТСотрудника(Объект.ОтсутствующийСотрудник, "ФОТИсполнениеОбязанностейПроцентом");
	УстановитьЗаголовокГруппыФОТСотрудника(Объект.ОтсутствующийСотрудник, "ФОТИсполнениеОбязанностейСовмещаемый");

	ЗаполнитьФОТСовмещаемый();
	
	ЗаполнитьОтражениеВБухУчетеПоСотруднику();
	
	ЮТР_РассчитатьДоплату();

КонецПроцедуры

&НаСервере
Процедура ЮТР_РассчитыватьДоплатуПриИзмененииНаСервере()
	
	ЮТР_УстановитьЗначенияЗависимыхРеквизитов();
	
	ЮТР_УстановитьВидимостьЭлементовЗависимыхОтРассчитыватьДоплату(ЭтаФорма);
	
	ЗаполнитьФОТСовмещающий();
	ЗаполнитьФОТСовмещаемый();
	
	ЮТР_РассчитатьДоплату();
	
КонецПроцедуры

&НаСервере
Процедура ЮТР_УстановитьВидимостьРасчетныхПолей()
	
	ИменаЭлементов = Новый Массив;
	ИменаЭлементов.Добавить("ДоплатаГруппа");
	ИменаЭлементов.Добавить("НачислениеДоплатыГруппа");
	
	ЗарплатаКадрыРасширенный.УстановитьОтображениеПолейМногофункциональныхДокументов(ЭтаФорма, ИменаЭлементов);
	
	Если ОграниченияНаУровнеЗаписей.ЧтениеБезОграничений Тогда
		
		УстановитьВидимостьПолейВилкиСтавок();
		ЮТР_УстановитьВидимостьЭлементовЗависимыхОтПричинаСовмещения(ЭтаФорма);
		УстановитьВидимостьЭлементовЗависимыхОтНачисление(ЭтаФорма);
		ЮТР_УстановитьВидимостьЭлементовЗависимыхОтРассчитыватьДоплату(ЭтаФорма);
		
		ЗарплатаКадрыРасширенный.УстановитьОтображениеГруппыФормы(Элементы, "ФОТИсполнениеОбязанностейПроцентом", "ТолькоПросмотр", Истина);
		ЗарплатаКадрыРасширенный.УстановитьОтображениеГруппыФормы(Элементы, "ФОТИсполнениеОбязанностейСовмещаемый", "ТолькоПросмотр", Истина);
		ЗарплатаКадрыРасширенный.УстановитьОтображениеГруппыФормы(Элементы, "ФОТСовмещающегоСотрудника", "ТолькоПросмотр", Истина);
		ЗарплатаКадрыРасширенный.УстановитьОтображениеГруппыФормы(Элементы, "ФОТСовмещениеДолжностейПроцентом", "ТолькоПросмотр", Истина);
		ЗарплатаКадрыРасширенный.УстановитьОтображениеГруппыФормы(Элементы, "ФОТСовмещениеДолжностейСовмещаемый", "ТолькоПросмотр", Истина);
		ЗарплатаКадрыРасширенный.УстановитьОтображениеГруппыФормы(Элементы, "ФОТСовмещающегоДолжностьСотрудника", "ТолькоПросмотр", Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФОТ", "ТолькоПросмотр", Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЮТР_ПриПолученииДанныхНаСервере()
		
	УстановитьДоступностьРегистрацииНачислений();
	ИспользуетсяРасчетЗарплаты = ПолучитьФункциональнуюОпцию("ИспользоватьРасчетЗарплатыРасширенная");
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПрочитатьВремяРегистрации();
	
	Если ОграниченияНаУровнеЗаписей.ЧтениеБезОграничений Тогда
		
		УстановитьЗаголовокГруппыФОТСотрудника(Объект.ОтсутствующийСотрудник, "ФОТИсполнениеОбязанностейПроцентом");
		УстановитьЗаголовокГруппыФОТСотрудника(Объект.ОтсутствующийСотрудник, "ФОТИсполнениеОбязанностейСовмещаемый");
		УстановитьЗаголовокГруппыФОТСотрудника(Объект.СовмещающийСотрудник, "ФОТСовмещающегоСотрудника");
		УстановитьЗаголовокГруппыФОТСотрудника(Объект.СовмещающийСотрудник, "ФОТСовмещающегоДолжностьСотрудника");
		УстановитьЗаголовокГруппыФОТДолжности();
		
	ИначеЕсли Не ИспользуетсяРасчетЗарплаты Тогда 
		
		Объект.РазмерДоплатыУтвержден = Истина;
		
	КонецЕсли;
	
	ДополнитьФорму();
	
	ЗарплатаКадрыРасширенный.МногофункциональныеДокументыДобавитьЭлементыФормы(
		ЭтаФорма, НСтр("ru='Размер доплаты утвержден'"), , "РазмерДоплатыУтвержден");
	
	ЭтаФорма.ИспользуетсяВилкаСтавок = ПолучитьФункциональнуюОпцию("ИспользоватьВилкуСтавокВШтатномРасписании");
	
	УстановитьВидимостьПолейВилкиСтавок();
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		ЭтаФорма.Элементы, "ГруппаСовмещениеПрофессийДолжностей", "Видимость", ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание"));
	
	Если ИспользуетсяРасчетЗарплаты И Не ОграниченияНаУровнеЗаписей.ИзменениеБезОграничений И Объект.РазмерДоплатыУтвержден Тогда 
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	ЮТР_УстановитьВидимостьРасчетныхПолей();
	
	ЮТР_УстановитьВидимостьЭлементовЗависимыхОтПричинаСовмещения(ЭтаФорма);
	
	Если ОграниченияНаУровнеЗаписей.ЧтениеБезОграничений Тогда 
		
		УстановитьВидимостьЭлементовЗависимыхОтНачисление(ЭтаФорма);
		ЮТР_УстановитьВидимостьЭлементовЗависимыхОтРассчитыватьДоплату(ЭтаФорма);
		
		Если ОграниченияНаУровнеЗаписей.ИзменениеБезОграничений Тогда 
			ЮТР_УстановитьДоступностьЭлементовЗависимыхОтСпособРасчетаДоплаты(ЭтаФорма);
		КонецЕсли;
		
		РассчитатьФОТНаФорме(ЭтаФорма);
		
	КонецЕсли;
	
	ЗарплатаКадрыРасширенный.УстановитьПредупреждающуюНадписьВМногофункциональныхДокументах(ЭтаФорма, "РазмерДоплатыУтвержден");
	ЗарплатаКадрыРасширенный.УстановитьВидимостьКомандПечатиМногофункциональногоДокумента(ЭтаФорма);
	
	УстановитьОтображениеНадписей();
	УстановитьФорматРедактированияРазмераДоплаты();
	
	ОтражениеЗарплатыВБухучетеРасширенный.УстановитьПодсказкуВводаСтатьиРасходовПоНачислению(ЭтаФорма, "Объект.Начисление");

КонецПроцедуры

&НаСервере
Процедура ЮТР_СовмещающийСотрудникПриИзмененииНаСервере()
	
	ПрочитатьВремяРегистрации();
	
	ЮТР_ПриИзмененииРеквизитовОпределяющихОграниченияНаУровнеЗаписей();
	
	УстановитьПривилегированныйРежим(Истина);
	
	УстановитьЗаголовокГруппыФОТСотрудника(Объект.СовмещающийСотрудник, "ФОТСовмещающегоСотрудника");
	УстановитьЗаголовокГруппыФОТСотрудника(Объект.СовмещающийСотрудник, "ФОТСовмещающегоДолжностьСотрудника");
	
	ЗаполнитьФОТСовмещающий();
	
	ЮТР_РассчитатьДоплату();
	
	УстановитьОтображениеНадписей();

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЮТР_УстановитьДоступностьЭлементовЗависимыхОтСпособРасчетаДоплаты(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы, "ПроцентДоплаты", "Доступность", ДоплатаРасчитываетсяПроцентомФОТ(Форма));
			
	ЮТР_УстановитьВидимостьТаблицФОТ(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЮТР_УстановитьВидимостьЭлементовЗависимыхОтРассчитыватьДоплату(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
	Форма.Элементы, "ГруппаТаблицФОТ", "Видимость", Форма.Объект.РассчитыватьДоплату И Не ЭтоУвеличениеОбъемаРабот(Форма));	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
	Форма.Элементы, "ГруппаСпособОтносительноФОТ", "Доступность", Форма.Объект.РассчитыватьДоплату);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
	Форма.Элементы, "РассчитатьРазмерДоплаты", "Доступность", Форма.Объект.РассчитыватьДоплату);
	
	ЮТР_УстановитьВидимостьТаблицФОТ(Форма);
	
КонецПроцедуры

&НаСервере
Процедура ЮТР_ПриИзмененииРеквизитовОпределяющихОграниченияНаУровнеЗаписей()
	
	БылиОграничения = ОграниченияНаУровнеЗаписей;
	УстановитьДоступностьРегистрацииНачислений();
	
	Если БылиОграничения.ЧтениеБезОграничений <> ОграниченияНаУровнеЗаписей.ЧтениеБезОграничений
		Или БылиОграничения.ИзменениеБезОграничений <> ОграниченияНаУровнеЗаписей.ИзменениеБезОграничений
		Или БылиОграничения.ИзменениеКадровыхДанных <> ОграниченияНаУровнеЗаписей.ИзменениеКадровыхДанных Тогда 
		
		Объект.РазмерДоплатыУтвержден = ОграниченияНаУровнеЗаписей.ИзменениеБезОграничений;
		
		ЮТР_УстановитьВидимостьРасчетныхПолей();
		
		Если БылиОграничения.ЧтениеБезОграничений <> ОграниченияНаУровнеЗаписей.ЧтениеБезОграничений Тогда 
			ЗарплатаКадрыРасширенный.УстановитьВидимостьКомандПечатиМногофункциональногоДокумента(ЭтаФорма);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЮТР_ОтсутствующийСотрудникЗонаОбслуживанияПриИзмененииНаСервере()
	
	УстановитьЗаголовокГруппыФОТСотрудника(Объект.ОтсутствующийСотрудник, "ФОТИсполнениеОбязанностейПроцентом");
	УстановитьЗаголовокГруппыФОТСотрудника(Объект.ОтсутствующийСотрудник, "ФОТИсполнениеОбязанностейСовмещаемый");

	ЗаполнитьФОТСовмещаемый();
	
	ЗаполнитьОтражениеВБухУчетеПоСотруднику();
	
	ЮТР_РассчитатьДоплату();
	
КонецПроцедуры

#КонецОбласти






